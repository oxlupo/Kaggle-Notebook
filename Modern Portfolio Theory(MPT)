{
 "cells": [
  {
   "attachments": {
    "b353d471-2c13-4530-8d34-982de83a0669.png": {
     "image/png": ""
    }
   },
   "cell_type": "markdown",
   "id": "4f37889f",
   "metadata": {
    "papermill": {
     "duration": 0.027254,
     "end_time": "2024-05-31T20:06:15.651441",
     "exception": false,
     "start_time": "2024-05-31T20:06:15.624187",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "\n",
    "\n",
    "Modern portfolio theory (MPT), or mean-variance analysis, is a mathematical framework for assembling a portfolio of assets such that the expected return is maximized for a given level of risk. It is a formalization and extension of diversification in investing, the idea that owning different kinds of financial assets is less risky than owning only one type. Its key insight is that an asset's risk and return should not be assessed by itself, but by how it contributes to a portfolio's overall risk and return. The variance of return (or its transformation, the standard deviation) is used as a measure of risk, because it is tractable when assets are combined into portfolios. Often, the historical variance and covariance of returns is used as a proxy for the forward-looking versions of these quantities, but other, more sophisticated methods are available.\n",
    "\n",
    "![harrymarkowitz_round2-1b3eb541bca840ffbe11c8c849f688da (1).png](attachment:b353d471-2c13-4530-8d34-982de83a0669.png)\n",
    "\n",
    "Economist Harry Markowitz introduced MPT in a 1952 essay, for which he was later awarded a Nobel Memorial Prize in Economic Sciences; see Markowitz model.\n",
    "\n",
    "In 1940, Bruno de Finetti published the mean-variance analysis method, in the context of proportional reinsurance, under a stronger assumption. The paper was obscure and only became known to economists of the English-speaking world in 2006.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fff36eec",
   "metadata": {
    "papermill": {
     "duration": 0.027888,
     "end_time": "2024-05-31T20:06:15.707142",
     "exception": false,
     "start_time": "2024-05-31T20:06:15.679254",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Table of Contnets\n",
    "\n",
    "* [The limits of Portfolio diversification](#The-limits-of-Portfolio-diversification)\n",
    "* [Rolling returns](#Rolling-returns)\n",
    "    - [Rolling correlations: multi-indices and groupby](#Rolling-correlations)\n",
    "* [Risk insurance strategies](#Risk-insurance-strategies)\n",
    "    - [Constant Proportion Portfolio Insurance (CPPI)](#Constant-Proportion-Portfolio-Insurance (CPPI))\n",
    "    - [Implementing CPPI with Drawdown constraint](#Implementing-CPPI-with-Drawdown-constraint)\n",
    "    - [Implementing the drawdown constraint](#Implementing-the-drawdown-constraint)\n",
    "    - [Random walk generation - Geometric Brownian Motion](#Random-walk-generation)\n",
    "        - [Geometric Brownian Motion](#Geometric-Brownian-Motion)\n",
    "        - [Interactive random walk simulation](#Interactive-random-walk-simulation)\n",
    "        - [Interactive CPPI simulation - Monte Carlo](#Interactive-CPPI-simulation)\n",
    "* [Conclusion](#Conclusion)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "8782040c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T20:06:15.762767Z",
     "iopub.status.busy": "2024-05-31T20:06:15.762274Z",
     "iopub.status.idle": "2024-05-31T20:06:56.899277Z",
     "shell.execute_reply": "2024-05-31T20:06:56.897608Z"
    },
    "papermill": {
     "duration": 41.168187,
     "end_time": "2024-05-31T20:06:56.901990",
     "exception": false,
     "start_time": "2024-05-31T20:06:15.733803",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting yfinance\r\n",
      "  Downloading yfinance-0.2.40-py2.py3-none-any.whl.metadata (11 kB)\r\n",
      "Requirement already satisfied: pandas>=1.3.0 in /opt/conda/lib/python3.10/site-packages (from yfinance) (2.2.2)\r\n",
      "Requirement already satisfied: numpy>=1.16.5 in /opt/conda/lib/python3.10/site-packages (from yfinance) (1.26.4)\r\n",
      "Requirement already satisfied: requests>=2.31 in /opt/conda/lib/python3.10/site-packages (from yfinance) (2.31.0)\r\n",
      "Collecting multitasking>=0.0.7 (from yfinance)\r\n",
      "  Downloading multitasking-0.0.11-py3-none-any.whl.metadata (5.5 kB)\r\n",
      "Requirement already satisfied: lxml>=4.9.1 in /opt/conda/lib/python3.10/site-packages (from yfinance) (5.2.1)\r\n",
      "Requirement already satisfied: platformdirs>=2.0.0 in /opt/conda/lib/python3.10/site-packages (from yfinance) (4.2.0)\r\n",
      "Requirement already satisfied: pytz>=2022.5 in /opt/conda/lib/python3.10/site-packages (from yfinance) (2023.3.post1)\r\n",
      "Requirement already satisfied: frozendict>=2.3.4 in /opt/conda/lib/python3.10/site-packages (from yfinance) (2.4.2)\r\n",
      "Collecting peewee>=3.16.2 (from yfinance)\r\n",
      "  Downloading peewee-3.17.5.tar.gz (3.0 MB)\r\n",
      "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m3.0/3.0 MB\u001b[0m \u001b[31m32.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[?25h  Installing build dependencies ... \u001b[?25l-\b \b\\\b \b|\b \b/\b \b-\b \bdone\r\n",
      "\u001b[?25h  Getting requirements to build wheel ... \u001b[?25l-\b \bdone\r\n",
      "\u001b[?25h  Preparing metadata (pyproject.toml) ... \u001b[?25l-\b \bdone\r\n",
      "\u001b[?25hRequirement already satisfied: beautifulsoup4>=4.11.1 in /opt/conda/lib/python3.10/site-packages (from yfinance) (4.12.2)\r\n",
      "Requirement already satisfied: html5lib>=1.1 in /opt/conda/lib/python3.10/site-packages (from yfinance) (1.1)\r\n",
      "Requirement already satisfied: soupsieve>1.2 in /opt/conda/lib/python3.10/site-packages (from beautifulsoup4>=4.11.1->yfinance) (2.5)\r\n",
      "Requirement already satisfied: six>=1.9 in /opt/conda/lib/python3.10/site-packages (from html5lib>=1.1->yfinance) (1.16.0)\r\n",
      "Requirement already satisfied: webencodings in /opt/conda/lib/python3.10/site-packages (from html5lib>=1.1->yfinance) (0.5.1)\r\n",
      "Requirement already satisfied: python-dateutil>=2.8.2 in /opt/conda/lib/python3.10/site-packages (from pandas>=1.3.0->yfinance) (2.9.0.post0)\r\n",
      "Requirement already satisfied: tzdata>=2022.7 in /opt/conda/lib/python3.10/site-packages (from pandas>=1.3.0->yfinance) (2023.4)\r\n",
      "Requirement already satisfied: charset-normalizer<4,>=2 in /opt/conda/lib/python3.10/site-packages (from requests>=2.31->yfinance) (3.3.2)\r\n",
      "Requirement already satisfied: idna<4,>=2.5 in /opt/conda/lib/python3.10/site-packages (from requests>=2.31->yfinance) (3.6)\r\n",
      "Requirement already satisfied: urllib3<3,>=1.21.1 in /opt/conda/lib/python3.10/site-packages (from requests>=2.31->yfinance) (1.26.18)\r\n",
      "Requirement already satisfied: certifi>=2017.4.17 in /opt/conda/lib/python3.10/site-packages (from requests>=2.31->yfinance) (2024.2.2)\r\n",
      "Downloading yfinance-0.2.40-py2.py3-none-any.whl (73 kB)\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m73.5/73.5 kB\u001b[0m \u001b[31m1.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[?25hDownloading multitasking-0.0.11-py3-none-any.whl (8.5 kB)\r\n",
      "Building wheels for collected packages: peewee\r\n",
      "  Building wheel for peewee (pyproject.toml) ... \u001b[?25l-\b \b\\\b \b|\b \b/\b \bdone\r\n",
      "\u001b[?25h  Created wheel for peewee: filename=peewee-3.17.5-cp310-cp310-linux_x86_64.whl size=293378 sha256=f51f23881372f4ac5fe2594414edc885e48dee1ffea1b2227b4aa816fd0a432b\r\n",
      "  Stored in directory: /root/.cache/pip/wheels/06/80/9b/98db0d58349a2f5c09f8406789ade4270762f97b7d26f2fa22\r\n",
      "Successfully built peewee\r\n",
      "Installing collected packages: peewee, multitasking, yfinance\r\n",
      "Successfully installed multitasking-0.0.11 peewee-3.17.5 yfinance-0.2.40\r\n"
     ]
    }
   ],
   "source": [
    "!pip install yfinance"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "17214d16",
   "metadata": {
    "papermill": {
     "duration": 0.028899,
     "end_time": "2024-05-31T20:06:56.960460",
     "exception": false,
     "start_time": "2024-05-31T20:06:56.931561",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 1. Load Libraries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "999f2420",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T20:06:57.020469Z",
     "iopub.status.busy": "2024-05-31T20:06:57.020021Z",
     "iopub.status.idle": "2024-05-31T20:06:59.424981Z",
     "shell.execute_reply": "2024-05-31T20:06:59.423865Z"
    },
    "papermill": {
     "duration": 2.438419,
     "end_time": "2024-05-31T20:06:59.427676",
     "exception": false,
     "start_time": "2024-05-31T20:06:56.989257",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import scipy.stats \n",
    "from pandas_datareader import data \n",
    "from datetime import datetime\n",
    "from scipy.optimize import minimize\n",
    "import yfinance as yf\n",
    "from datetime import datetime\n",
    "import warnings\n",
    "warnings.filterwarnings(\"ignore\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "3a3c1b05",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T20:06:59.489287Z",
     "iopub.status.busy": "2024-05-31T20:06:59.488643Z",
     "iopub.status.idle": "2024-05-31T20:06:59.532737Z",
     "shell.execute_reply": "2024-05-31T20:06:59.531506Z"
    },
    "papermill": {
     "duration": 0.07811,
     "end_time": "2024-05-31T20:06:59.535739",
     "exception": false,
     "start_time": "2024-05-31T20:06:59.457629",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "%load_ext autoreload\n",
    "%autoreload 2\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "c22a2332",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T20:06:59.597594Z",
     "iopub.status.busy": "2024-05-31T20:06:59.596863Z",
     "iopub.status.idle": "2024-05-31T20:07:01.420868Z",
     "shell.execute_reply": "2024-05-31T20:07:01.419872Z"
    },
    "papermill": {
     "duration": 1.857756,
     "end_time": "2024-05-31T20:07:01.423736",
     "exception": false,
     "start_time": "2024-05-31T20:06:59.565980",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import sys\n",
    "sys.path.insert(1, '/kaggle/input/edhec-investment-management-datasets')\n",
    "import edhec_risk_kit as erk"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "f0774ed1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T20:07:01.486465Z",
     "iopub.status.busy": "2024-05-31T20:07:01.485849Z",
     "iopub.status.idle": "2024-05-31T20:07:01.525824Z",
     "shell.execute_reply": "2024-05-31T20:07:01.524717Z"
    },
    "papermill": {
     "duration": 0.07435,
     "end_time": "2024-05-31T20:07:01.528581",
     "exception": false,
     "start_time": "2024-05-31T20:07:01.454231",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# using seaborn style (type plt.style.available to see available styles)\n",
    "plt.style.use(\"seaborn-dark\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f7c6937e",
   "metadata": {
    "papermill": {
     "duration": 0.02988,
     "end_time": "2024-05-31T20:07:01.588637",
     "exception": false,
     "start_time": "2024-05-31T20:07:01.558757",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 2. Modern portfolio theory (MPT)\n",
    "\n",
    "The **Modern portfolio theory (MPT)** is a mathematical framework **for assembling a portfolio of assets such that the expected return is maximized for a given level of volatility**. It is a formalization of **diversification in investing**, i.e., the idea that owning different kinds of financial assets is less risky than owning one signgle asset. \n",
    "\n",
    "### 2.1 Efficient Frontiers \n",
    "\n",
    "In the MPT, the **efficient frontier** is a curve denoting the **efficient** part of the **volatility-return plane**. \n",
    "Formally, it is the set of portfolios that can be constructed with the given input assets \n",
    "that have the maximum expected returns for a fixed level of volatility and, in turn, \n",
    "the lowest volatilities for a fixed level of expected return. The efficient frontier was first formulated by **Harry Markowitz** (1952).\n",
    "\n",
    "We have to construct a portfolio of several assets and **we want to find the optimal percentages of investment to be allocated in these assets** so that, for example, the total (expected) return of such a portfolio is maximixed for a given level of volatility. \n",
    "\n",
    "Suppose **we have $N > 1$ stocks** and we decide to invest our capital in them. \n",
    "Let $\\mathbf{w}:=(w_1,\\dots,w_N)^T$, with $w_i\\in (0,1)$ for all $i=1,\\dots,N$, \n",
    "where each $w_i$ represents the proportion of the investiment \n",
    "(a percentage of the capital invested) in asset $i$. \n",
    "These quantities $w_i$ are the **weights**.\n",
    "\n",
    "Since we invest all of our capital, there holds $\\sum_{i=1}^N w_i = 1$ (this is a **long-only** strategy).\n",
    "\n",
    "Let $R_i$ and $R_p$ be the return of asset $i$ and the total return of the portfolio, respectively. \n",
    "Likewise, let $\\sigma_i$ and $\\sigma_p$ be the volatility of asset $i$ and the volatility of the portfolio, respectively. \n",
    "\n",
    "\n",
    "### 2.2 Return of a portfolio\n",
    "The **total return of the porfolio** is going to be a simple weigthed average of the (total) returns of single assets, i.e.,\n",
    "$$\n",
    "R_p = \\sum_{i=1}^N w_i R_i = \\mathbf{w}^T \\mathbf{R},\n",
    "$$\n",
    "where $\\mathbf{R} := (R_1,\\dots,R_N)^T$. \n",
    "Note that if we have a dataset of **past returns**, the total return $R_p$ is computed as above using the returns of the past data. On the other hand, if we are going to invest now, we do not have a series of true (past) return, but we instead would have **expected returns**. Hence, in this case we would have the maean value $\\mathbb{E}$ in the formula above. \n",
    "\n",
    "\n",
    "### 2.3 Volatility of a portfolio\n",
    "The **volatility of the porfolio** is computed as the (square root of the) variance of the weigthed sum of the returns of single assets. \n",
    "\n",
    "Let us consider an example with only two assets. \n",
    "We have $w_1$ and $w_2$ and two assets whose returns are $R_1$ and $R_2$. We have:\n",
    "$$\n",
    "\\sigma_p^2 =   \\text{Var}(w_1 R_1 + w_2 R_2) = \n",
    "w_1^2 \\text{Var}(R_1) + w_2^2\\text{Var}(R_2) + 2w_1 w_2\\text{Cov}(R_1,R_2) =\n",
    "w_1^2 \\sigma_1^2 + w_2^2\\sigma_2^2 + 2w_1 w_2\\text{Cov}(R_1,R_2), \n",
    "$$\n",
    "where \n",
    "$$\n",
    "\\text{Cov}(R_1,R_2) := \\mathbb{E}[(R_1-\\mu_1)(R_2 - \\mu_2)], \n",
    "$$\n",
    "is the **covariance** between the two assets and $\\mu_i$ and $\\mu_j$ denote \n",
    "their mean returns, respectively. In particular, if we let \n",
    "$$\n",
    "\\rho_{1,2} := \\frac{\\text{Cov}(R_1,R_2)}{\\sigma_1 \\sigma_2}, \n",
    "$$\n",
    "denote the **correlation coefficient** between the assets, \n",
    "then the volatility of a $2$ assets portfolio becomes:\n",
    "$$\n",
    "\\sigma_p = \n",
    "\\sqrt{ w_1^2 \\sigma_1^2 + w_2^2 \\sigma_2^2 + 2w_1 w_2 \\sigma_1 \\sigma_2 \\rho_{1,2} }. \n",
    "$$\n",
    "Note that, using matrix notation, we can write in compact form such a volatility. That is:\n",
    "$$\n",
    "\\sigma_p = \n",
    "\\sqrt{\n",
    "(w_1, w_2)\\, \n",
    "\\begin{pmatrix}\n",
    "\\sigma^2_1 & \\sigma_1 \\sigma_2 \\rho_{12} \\\\\n",
    "\\sigma_1 \\sigma_2 \\rho_{21} & \\sigma^2_2\n",
    "\\end{pmatrix}\n",
    "\\begin{pmatrix}\n",
    "w_1 \\\\\n",
    "w_2 \n",
    "\\end{pmatrix}\n",
    "}\n",
    "=\n",
    "\\sqrt{\n",
    "\\mathbf{w}^T \\Sigma \\mathbf{w}\n",
    "}\n",
    "\\quad\\text{and}\\quad\n",
    "\\Sigma := \n",
    "\\begin{pmatrix}\n",
    "\\sigma^2_1 & \\sigma_1 \\sigma_2 \\rho_{12} \\\\\n",
    "\\sigma_1 \\sigma_2 \\rho_{21} & \\sigma^2_2\n",
    "\\end{pmatrix},\n",
    "$$\n",
    "where $\\Sigma$ is the symmetric square **covariance matrix**.\n",
    "\n",
    "\n",
    "Now, in case of $N$ stocks, let again $\\Sigma = [c_{ij}]$ \n",
    "be the $N\\times N$ covariance matrix \n",
    "where each element $c_{ij} := \\sigma_i \\sigma_j \\rho_{ij}$, for $i,j=1,\\dots,N$, \n",
    "denotes the **covariance** between assets $i$ \n",
    "and asset $j$, \n",
    "and with $\\sigma_i$, $\\sigma_j$, and $\\rho_{ij}$ being the volatilities \n",
    "and the correlation coefficients of assets $i$ and $j$, respectively.\n",
    "Of course, when $i=j$, $c_{ii}=\\sigma_i^2$ is simply the variance of asset $i$ \n",
    "(these are the diagonal entries of the covariance matrix).\n",
    "\n",
    "The volatility of the portfolio is then given by:\n",
    "$$\n",
    "\\sigma_p = \\sqrt{ \\mathbf{w}^T \\Sigma \\mathbf{w} }.\n",
    "$$\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "96048607",
   "metadata": {
    "papermill": {
     "duration": 0.029323,
     "end_time": "2024-05-31T20:07:01.647751",
     "exception": false,
     "start_time": "2024-05-31T20:07:01.618428",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### 3. Efficient frontiers of 2-assets portfolios \n",
    "In the following, we propose an artificial example in order to see the curve that is drawn by different portfolios which \n",
    "are constructed with only $2$ assets with different correlation $\\rho_{12}$. \n",
    "First of all, we assume to generate $500$ **daily returns** of $2$ assets:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "8dcfd7c2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T20:07:01.769507Z",
     "iopub.status.busy": "2024-05-31T20:07:01.768753Z",
     "iopub.status.idle": "2024-05-31T20:07:01.808587Z",
     "shell.execute_reply": "2024-05-31T20:07:01.807570Z"
    },
    "papermill": {
     "duration": 0.073583,
     "end_time": "2024-05-31T20:07:01.811235",
     "exception": false,
     "start_time": "2024-05-31T20:07:01.737652",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "nret             = 500\n",
    "periods_per_year = 252\n",
    "risk_free_rate   = 0.0"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "500cf215",
   "metadata": {
    "papermill": {
     "duration": 0.030306,
     "end_time": "2024-05-31T20:07:01.871103",
     "exception": false,
     "start_time": "2024-05-31T20:07:01.840797",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Then, we set up a value for the means and the volatility of our two artifical assets:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "11009fa1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T20:07:01.932155Z",
     "iopub.status.busy": "2024-05-31T20:07:01.931658Z",
     "iopub.status.idle": "2024-05-31T20:07:01.971486Z",
     "shell.execute_reply": "2024-05-31T20:07:01.970299Z"
    },
    "papermill": {
     "duration": 0.073663,
     "end_time": "2024-05-31T20:07:01.974327",
     "exception": false,
     "start_time": "2024-05-31T20:07:01.900664",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "mean_1 = 0.001019\n",
    "mean_2 = 0.001249\n",
    "vol_1  = 0.016317\n",
    "vol_2  = 0.019129"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1aef93f0",
   "metadata": {
    "papermill": {
     "duration": 0.029902,
     "end_time": "2024-05-31T20:07:02.034153",
     "exception": false,
     "start_time": "2024-05-31T20:07:02.004251",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "and we set up $6$ correlations of the two assets, and for every fixed correlation, \n",
    "we will generate $20$ portfolios by allocating $20$ pairs of weights:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "88f33f3a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T20:07:02.095929Z",
     "iopub.status.busy": "2024-05-31T20:07:02.095552Z",
     "iopub.status.idle": "2024-05-31T20:07:02.139507Z",
     "shell.execute_reply": "2024-05-31T20:07:02.138572Z"
    },
    "papermill": {
     "duration": 0.078104,
     "end_time": "2024-05-31T20:07:02.142137",
     "exception": false,
     "start_time": "2024-05-31T20:07:02.064033",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Correlation goes from 1 (completely correlated) to -1 (conversely correlated)\n",
    "rhos  = np.linspace(1,-1,num=6) \n",
    "ncorr = len(rhos)\n",
    "\n",
    "# Pairs of weights to be used to construct the portfolios for any given correlation\n",
    "nweig = 20\n",
    "w1 = np.linspace(0,1,num=nweig)\n",
    "w2 = 1 - np.linspace(0,1,num=nweig)\n",
    "ww = pd.DataFrame( [w1, w2] ).T  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "f236e470",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T20:07:02.203793Z",
     "iopub.status.busy": "2024-05-31T20:07:02.203321Z",
     "iopub.status.idle": "2024-05-31T20:07:03.560470Z",
     "shell.execute_reply": "2024-05-31T20:07:03.559067Z"
    },
    "papermill": {
     "duration": 1.39108,
     "end_time": "2024-05-31T20:07:03.563275",
     "exception": false,
     "start_time": "2024-05-31T20:07:02.172195",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 2000x400 with 7 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Set seed\n",
    "np.random.seed(1)\n",
    "\n",
    "# Assuming these variables are defined elsewhere in your script\n",
    "# rhos, vol_1, vol_2, mean_1, mean_2, nret, ww, annualize_rets, portfolio_return,\n",
    "# portfolio_volatility, annualize_vol, sharpe_ratio, risk_free_rate, periods_per_year, w2\n",
    "\n",
    "# Open the figure\n",
    "fig, ax = plt.subplots(1, 6, figsize=(20, 4))\n",
    "ax = ax.flatten()\n",
    "\n",
    "for k_rho, rho in enumerate(rhos):\n",
    "    # Allocate an empty portfolio\n",
    "    portfolio = pd.DataFrame(columns=[\"return\", \"volatility\", \"sharpe ratio\"])\n",
    "\n",
    "    # Generate the assets' returns with the given correlation rho\n",
    "    cov_ij = rho * vol_1 * vol_2\n",
    "    cov_rets = pd.DataFrame([[vol_1 ** 2, cov_ij], [cov_ij, vol_2 ** 2]])\n",
    "    daily_rets = pd.DataFrame(np.random.multivariate_normal((mean_1, mean_2), cov_rets.values, nret))\n",
    "\n",
    "    for i in range(ww.shape[0]):\n",
    "        # Now, construct the portfolio of two asset with correlation rho and weights ww.loc[i]\n",
    "        weights = ww.loc[i]\n",
    "        # here, weights is a column vector (pd.Series)\n",
    "        \n",
    "        # annualized portfolio returns\n",
    "        ann_rets = erk.annualize_rets(daily_rets, periods_per_year)\n",
    "        portfolio_ret = erk.portfolio_return(weights, ann_rets)\n",
    "        \n",
    "        # annualized portfolio volatility\n",
    "        portfolio_vol = erk.portfolio_volatility(weights, cov_rets)\n",
    "        portfolio_vol = erk.annualize_vol(portfolio_vol, periods_per_year)\n",
    "        \n",
    "        # annualized portfolio sharpe ratio\n",
    "        portfolio_spr = erk.sharpe_ratio(portfolio_ret, risk_free_rate, periods_per_year, v=portfolio_vol)\n",
    "        \n",
    "        # dataframe containing the return, volatility, and the sharpe ratio of the portfolio constructed\n",
    "        new_row = pd.DataFrame({\"return\": [portfolio_ret], \"volatility\": [portfolio_vol], \"sharpe ratio\": [portfolio_spr]})\n",
    "        portfolio = pd.concat([portfolio, new_row], ignore_index=True)\n",
    "\n",
    "    # plot create scatter plot coloured by Sharpe Ratio\n",
    "    im = ax[k_rho].scatter(portfolio[\"volatility\"] * 100, portfolio[\"return\"] * 100, c=w2, cmap='RdYlBu')\n",
    "    ax[k_rho].grid()\n",
    "    ax[k_rho].set_title(\"Correlation: {}\".format(np.round(rho, 2)), y=0.9, loc='left')\n",
    "    ax[k_rho].set_xlabel(\"volatility (%)\")\n",
    "    if k_rho == 0:\n",
    "        ax[k_rho].set_ylabel(\"return (%)\")\n",
    "    ax[k_rho].set_xlim([0, 32])\n",
    "    ax[k_rho].set_ylim([0, 95])\n",
    "\n",
    "fig.colorbar(im, ax=ax.ravel().tolist())\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ca68a7dd",
   "metadata": {
    "papermill": {
     "duration": 0.031644,
     "end_time": "2024-05-31T20:07:03.626735",
     "exception": false,
     "start_time": "2024-05-31T20:07:03.595091",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "For any given correlation, each point represents the pair (return, volatility) of a portfolio constructed with some percentage allocation. \n",
    "This can be seen in the colorbar: **red corresponds to $\\mathbf{w} = (1,0)$**, i.e., allocation of money only to the first asset, whereas \n",
    "**blue corresponds to $\\mathbf{w} = (0,1)$**, i.e., allocation of money only ot the second asset.  \n",
    "\n",
    "We can see that **the lower the correlation between the assets, the better the trade-off between return and volatility**: in this example, \n",
    "when $\\rho=-1$, we could in principle construct a portfolio which guarantees about $30\\%$ of return with almost no volatility."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b484ed0a",
   "metadata": {
    "papermill": {
     "duration": 0.03099,
     "end_time": "2024-05-31T20:07:03.689706",
     "exception": false,
     "start_time": "2024-05-31T20:07:03.658716",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### 4. Example from the real world: US stocks\n",
    "Now we will get the timeseries of some US economy stocks and see how to construct a portfolio in an efficient way."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "ebcdb236",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T20:07:03.755191Z",
     "iopub.status.busy": "2024-05-31T20:07:03.754762Z",
     "iopub.status.idle": "2024-05-31T20:07:04.766018Z",
     "shell.execute_reply": "2024-05-31T20:07:04.764724Z"
    },
    "papermill": {
     "duration": 1.047058,
     "end_time": "2024-05-31T20:07:04.768418",
     "exception": false,
     "start_time": "2024-05-31T20:07:03.721360",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[*********************100%%**********************]  1 of 1 completed\n",
      "[*********************100%%**********************]  1 of 1 completed\n",
      "[*********************100%%**********************]  1 of 1 completed\n"
     ]
    }
   ],
   "source": [
    "tickers = ['AMZN','KO', 'MSFT']\n",
    "n_assets = len(tickers)\n",
    "\n",
    "stocks = pd.DataFrame()\n",
    "start_date = datetime(2011, 1, 1)\n",
    "end_date = datetime(2019, 1, 1)\n",
    "\n",
    "for stock_name in tickers:\n",
    "    # daily data\n",
    "    data = yf.download(stock_name, start=start_date, end=end_date)\n",
    "    stocks[stock_name] = data[\"Adj Close\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "da50a141",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T20:07:04.833423Z",
     "iopub.status.busy": "2024-05-31T20:07:04.832671Z",
     "iopub.status.idle": "2024-05-31T20:07:04.883815Z",
     "shell.execute_reply": "2024-05-31T20:07:04.882647Z"
    },
    "papermill": {
     "duration": 0.086562,
     "end_time": "2024-05-31T20:07:04.886485",
     "exception": false,
     "start_time": "2024-05-31T20:07:04.799923",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>AMZN</th>\n",
       "      <th>KO</th>\n",
       "      <th>MSFT</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2018-12-24</th>\n",
       "      <td>67.197998</td>\n",
       "      <td>39.005573</td>\n",
       "      <td>89.059944</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018-12-26</th>\n",
       "      <td>73.544998</td>\n",
       "      <td>39.837280</td>\n",
       "      <td>95.143608</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018-12-27</th>\n",
       "      <td>73.082001</td>\n",
       "      <td>40.337997</td>\n",
       "      <td>95.730225</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018-12-28</th>\n",
       "      <td>73.901001</td>\n",
       "      <td>40.057941</td>\n",
       "      <td>94.982765</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018-12-31</th>\n",
       "      <td>75.098503</td>\n",
       "      <td>40.185230</td>\n",
       "      <td>96.099197</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                 AMZN         KO       MSFT\n",
       "Date                                       \n",
       "2018-12-24  67.197998  39.005573  89.059944\n",
       "2018-12-26  73.544998  39.837280  95.143608\n",
       "2018-12-27  73.082001  40.337997  95.730225\n",
       "2018-12-28  73.901001  40.057941  94.982765\n",
       "2018-12-31  75.098503  40.185230  96.099197"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "stocks.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "67239545",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T20:07:04.951574Z",
     "iopub.status.busy": "2024-05-31T20:07:04.951172Z",
     "iopub.status.idle": "2024-05-31T20:07:05.000114Z",
     "shell.execute_reply": "2024-05-31T20:07:04.998870Z"
    },
    "papermill": {
     "duration": 0.084434,
     "end_time": "2024-05-31T20:07:05.002589",
     "exception": false,
     "start_time": "2024-05-31T20:07:04.918155",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>AMZN</th>\n",
       "      <th>KO</th>\n",
       "      <th>MSFT</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2018-12-24</th>\n",
       "      <td>-0.024313</td>\n",
       "      <td>-0.033845</td>\n",
       "      <td>-0.041739</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018-12-26</th>\n",
       "      <td>0.094452</td>\n",
       "      <td>0.021323</td>\n",
       "      <td>0.068310</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018-12-27</th>\n",
       "      <td>-0.006295</td>\n",
       "      <td>0.012569</td>\n",
       "      <td>0.006166</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018-12-28</th>\n",
       "      <td>0.011207</td>\n",
       "      <td>-0.006943</td>\n",
       "      <td>-0.007808</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018-12-31</th>\n",
       "      <td>0.016204</td>\n",
       "      <td>0.003178</td>\n",
       "      <td>0.011754</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                AMZN        KO      MSFT\n",
       "Date                                    \n",
       "2018-12-24 -0.024313 -0.033845 -0.041739\n",
       "2018-12-26  0.094452  0.021323  0.068310\n",
       "2018-12-27 -0.006295  0.012569  0.006166\n",
       "2018-12-28  0.011207 -0.006943 -0.007808\n",
       "2018-12-31  0.016204  0.003178  0.011754"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# compute the daily returns \n",
    "daily_rets = erk.compute_returns(stocks)\n",
    "daily_rets.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "57f8c677",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T20:07:05.068777Z",
     "iopub.status.busy": "2024-05-31T20:07:05.067799Z",
     "iopub.status.idle": "2024-05-31T20:07:05.116608Z",
     "shell.execute_reply": "2024-05-31T20:07:05.115492Z"
    },
    "papermill": {
     "duration": 0.084445,
     "end_time": "2024-05-31T20:07:05.119030",
     "exception": false,
     "start_time": "2024-05-31T20:07:05.034585",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>AMZN</th>\n",
       "      <th>KO</th>\n",
       "      <th>MSFT</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>AMZN</th>\n",
       "      <td>0.000397</td>\n",
       "      <td>0.000047</td>\n",
       "      <td>0.000137</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>KO</th>\n",
       "      <td>0.000047</td>\n",
       "      <td>0.000082</td>\n",
       "      <td>0.000049</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MSFT</th>\n",
       "      <td>0.000137</td>\n",
       "      <td>0.000049</td>\n",
       "      <td>0.000213</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          AMZN        KO      MSFT\n",
       "AMZN  0.000397  0.000047  0.000137\n",
       "KO    0.000047  0.000082  0.000049\n",
       "MSFT  0.000137  0.000049  0.000213"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# compute the mean daily returns and the covariance of daily returns of the two assets\n",
    "mean_rets = daily_rets.mean()\n",
    "std_rets  = daily_rets.std()\n",
    "cov_rets  = daily_rets.cov()\n",
    "cov_rets"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e0c2892a",
   "metadata": {
    "papermill": {
     "duration": 0.031962,
     "end_time": "2024-05-31T20:07:05.183171",
     "exception": false,
     "start_time": "2024-05-31T20:07:05.151209",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Now we simulate $4000$ portfolios with weights allocated to the stocks above:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "90c864f9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T20:07:05.251042Z",
     "iopub.status.busy": "2024-05-31T20:07:05.250631Z",
     "iopub.status.idle": "2024-05-31T20:07:05.291492Z",
     "shell.execute_reply": "2024-05-31T20:07:05.290574Z"
    },
    "papermill": {
     "duration": 0.078105,
     "end_time": "2024-05-31T20:07:05.294097",
     "exception": false,
     "start_time": "2024-05-31T20:07:05.215992",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "periods_per_year = 252\n",
    "num_portfolios   = 4000\n",
    "portfolios       = pd.DataFrame(columns=[\"return\",\"volatility\",\"sharpe ratio\",\"w1\",\"w2\",\"w3\"])\n",
    "risk_free_rate   = 0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "9035d5e7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T20:07:05.361313Z",
     "iopub.status.busy": "2024-05-31T20:07:05.360808Z",
     "iopub.status.idle": "2024-05-31T20:07:12.064903Z",
     "shell.execute_reply": "2024-05-31T20:07:12.063857Z"
    },
    "papermill": {
     "duration": 6.741921,
     "end_time": "2024-05-31T20:07:12.067637",
     "exception": false,
     "start_time": "2024-05-31T20:07:05.325716",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "for i in range(num_portfolios):\n",
    "    # Select random weights\n",
    "    weights = np.random.random(n_assets)\n",
    "    # Rescale them to sum to 1\n",
    "    weights /= np.sum(weights)\n",
    "    \n",
    "    # Annualized portfolio returns\n",
    "    ann_rets = erk.annualize_rets(daily_rets, periods_per_year)\n",
    "    portfolio_ret = erk.portfolio_return(weights, ann_rets)\n",
    "    \n",
    "    # Annualized portfolio volatility\n",
    "    portfolio_vol = erk.portfolio_volatility(weights, cov_rets)\n",
    "    portfolio_vol = erk.annualize_vol(portfolio_vol, periods_per_year)\n",
    "    \n",
    "    # Annualized portfolio Sharpe ratio\n",
    "    portfolio_spr = erk.sharpe_ratio(portfolio_ret, risk_free_rate, periods_per_year, v=portfolio_vol)\n",
    "    \n",
    "    # Create a new DataFrame row\n",
    "    new_row = pd.DataFrame({\n",
    "        \"return\": [portfolio_ret], \n",
    "        \"volatility\": [portfolio_vol], \n",
    "        \"sharpe ratio\": [portfolio_spr],\n",
    "        \"w1\": [weights[0]], \n",
    "        \"w2\": [weights[1]], \n",
    "        \"w3\": [weights[2]]\n",
    "    })\n",
    "    \n",
    "    # Concatenate the new row to the portfolios DataFrame\n",
    "    portfolios = pd.concat([portfolios, new_row], ignore_index=True)\n",
    "\n",
    "# Ensure portfolios DataFrame is rounded to 2 decimal places\n",
    "portfolios = portfolios.round(2)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "89a1e949",
   "metadata": {
    "papermill": {
     "duration": 0.032326,
     "end_time": "2024-05-31T20:07:12.132091",
     "exception": false,
     "start_time": "2024-05-31T20:07:12.099765",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Now we create a scatter plot coloured by sharpe ratios of the portfolios generated above and we also plot the efficient frontier:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "61c0a906",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T20:07:12.198482Z",
     "iopub.status.busy": "2024-05-31T20:07:12.197539Z",
     "iopub.status.idle": "2024-05-31T20:07:13.043894Z",
     "shell.execute_reply": "2024-05-31T20:07:13.042833Z"
    },
    "papermill": {
     "duration": 0.882207,
     "end_time": "2024-05-31T20:07:13.046220",
     "exception": false,
     "start_time": "2024-05-31T20:07:12.164013",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAw8AAAIeCAYAAAD9ITNcAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuNSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/xnp5ZAAAACXBIWXMAAA9hAAAPYQGoP6dpAACiKUlEQVR4nOzdd5hU5dnH8e85U3a277JL79Kli1gQRREbYEMFezdqorHltcQSTVSMiUYxJhYIKjY0gg1EY2IXG6JYEFGk1+19p5zn/WNgYNldmC2zs+X3ua65YE67n3lmdvfc8zTLGGMQERERERHZCzveBRARERERkZZByYOIiIiIiERFyYOIiIiIiERFyYOIiIiIiERFyYOIiIiIiERFyYOIiIiIiERFyYOIiIiIiERFyYOIiIiIiERFyYOIiIiIiERFyYOINJlly5Zx+umnM2LECAYMGMDy5cujPnfevHkMGDCA9evXR7adc845nHPOObEoatw99NBDDBgwoFGvWVv9v//++5x44okMHTqUAQMGUFRUxI033sj48ePrHGP8+PHceOONjVruxjBz5kyOPPJIBg0axIknnhjv4kR8+umnDBgwgE8//TTeRRERiYo73gUQkdibN28eN910U+S51+ulS5cuHHLIIfz6178mOzu70WI98sgj9O3blwkTJlTZHggEuPrqq/F6vdx00034fD66dOnSaHFlz2qr//z8fK6++mr69evHbbfdhtfrJTExMd7F3aP33nuPZcuWceWVV0Z1/Icffshf/vIXTjjhBK688koyMzNjXMLqnnnmGRITE5kyZUqTxxYRaUxKHkTakN/+9rd069YNv9/PkiVLeO6553jvvfd4/fXXG+2G8dFHH+WYY46pljysXbuWDRs2cOedd3Laaac1SqxZs2Y1ynXagtrq//3336e0tJSrrrqKMWPGRLb/6U9/whhT5ziLFi3CsqxGKXNt3nvvPZ555pmok4dPPvkE27a566678Hq9MS1bbZ577jkyMzOrJQ+jR49m2bJleDyeuJRLRKSulDyItCGHHXYYQ4cOBeC0004jIyOD2bNn89///pfJkyfX+7rGGCorK/H5fLUek5eXB0Bqamq94+wuXjeCLVFt9V/b9vrezDbH9yQ3Nxefz7fXsjmOQyAQICEhoYlKBrZtN2q8srIykpKSGu16IiK705gHkTbsoIMOAoiMIwgGgzz88MNMmDCBIUOGMH78eO6//378fn+V88aPH8+ll17KBx98wJQpUxg2bBjPP/88AwYMoKysjPnz5zNgwAAGDBjAjTfeyI033sjZZ58NwFVXXcWAAQOqjFVYvHgxZ555JiNGjGD//ffn8ssv5+eff95r+Wsa85Cbm8vvf/97xowZw9ChQznhhBOYP39+tXMXLFjAlClTGDlyJPvttx/HH388Tz755F5jzpo1i9NPP50DDzyQYcOGMWXKFBYtWlTtuAEDBvDHP/6Rt99+m8mTJzNkyBAmTZrE+++/X+3YL774glNOOYWhQ4cyYcIEnn/++b2WY1dff/01F110EaNGjWL48OGcffbZLFmyJLK/tvo/55xzuOGGGwA49dRTI+/XjnN2H/PgOA5PPvkkxx9/PEOHDuWggw7ioosu4ptvvokcU9OYh6KiIu666y7GjRvHkCFDOOqoo3jsscdwHCdyzPr16xkwYACzZs1i7ty5kc/gKaecwrJly6q8lmeeeSZSxzsetRkwYADz5s2jrKwscuy8efMi+/74xz/y6quvMmnSJIYOHcoHH3wAwPfff8/FF1/Mfvvtx8iRIznvvPP46quvqlx7xzicJUuWMH36dA466CBGjBjBb37zm0hStqNOVq5cyWeffRYpw47PbW1jHvb2nsLOcTE//fQT1113HaNHj+bMM8+stS5ERBqDWh5E2rC1a9cCkJGRAcAtt9zC/PnzOeaYY7jgggtYtmwZjz76KD///DMPP/xwlXN/+eUXrrvuOqZNm8bUqVPp3bs39957L7fccgvDhg1j6tSpAPTo0QOAjh078sgjj3DOOecwdOjQyDiLjz/+mEsuuYRu3bpxxRVXUFFRwdNPP80ZZ5zBvHnz6NatW9Svp6KignPOOYe1a9dy1lln0a1bNxYtWsSNN95IUVER5513HgAfffQR1157LQcffDC/+93vAFi1ahVffvll5JjaPPXUU4wfP57jjz+eQCDAggULuOqqq3j00Uc5/PDDqxy7ZMkS3nrrLc4880ySk5OZM2cOv/3tb3nnnXci/e5XrFjBRRddRLt27bjyyisJBoM89NBDZGVlRfWaFy9ezCWXXMKQIUO44oorsCyLefPmcd555/Hss88ybNgwpk2bVmv99+7dm7lz50a6tO14v2py8803M2/ePA477DBOPfVUQqEQX3zxBV9//XWkRWt35eXlnH322WzZsoXTTz+dzp07s3TpUu6//362bdvGzTffXOX4119/ndLSUqZNm4ZlWcycOZMrr7ySt99+G4/Hw7Rp09i6dSsfffQR9957717r59577+WFF15g2bJl3HnnnQDst99+kf2ffPIJb7zxBmeddRaZmZl07dqVlStXctZZZ5GcnMzFF1+M2+1m7ty5nHPOOTz99NMMHz68Sow777yTtLQ0rrjiCjZs2MCTTz7JH//4Rx544AEAfv/73/OnP/2JpKQkLrvsMoA9jjOK5j3d1VVXXUXPnj255ppr6tXVTESkToyItHovvfSS6d+/v/n4449Nbm6u2bRpk1mwYIE54IADzLBhw8zmzZvN8uXLTf/+/c3NN99c5dx77rnH9O/f3yxevDiy7YgjjjD9+/c377//frVYI0aMMDfccEO17Z988onp37+/eeONN6psP/HEE83BBx9s8vPzI9uWL19uBg4caK6//vpqr2HdunWRbWeffbY5++yzI8+feOIJ079/f/PKK69Etvn9fjNt2jQzYsQIU1xcbIwx5s477zT77befCQaDe6u6asrLy6s89/v9ZvLkyebcc8+tsr1///5m8ODBZs2aNVVeV//+/c2cOXMi237961+boUOHmg0bNkS2/fTTT2bQoEGmf//+eyyL4zjm6KOPNhdeeKFxHKdKGcePH28uuOCCyLba6n9HvS5btqzK9htuuMEcccQRkeeLFy82/fv3N3/6059qLMcORxxxRJX3/+GHHzYjRowwv/zyS5Vz/vrXv5pBgwaZjRs3GmOMWbdunenfv7854IADTEFBQeS4t99+2/Tv39/873//i2y744479lo3u7+WESNGVNvev39/M3DgQLNy5coq23/961+bwYMHm7Vr10a2bdmyxYwcOdKcddZZkW076u7888+vUgd33323GTRokCkqKopsmzRpUpXP6g473pdPPvnEGFO393TGjBmmf//+5tprr426LkREGkrdlkTakPPPP5+DDz6YcePGcc0115CcnMzf//53OnbsyHvvvQfABRdcUOWcCy+8ECCyf4du3bpx6KGHNqg8W7duZfny5Zx88smR1g+AgQMHMmbMmGox9+b999+nffv2VcZveDwezjnnHMrKyvj8888BSEtLo7y8nI8++qjOZd51XEdhYSHFxcWMGjWK77//vtqxY8aMqfJN/sCBA0lJSWHdunUAhEIhPvzwQyZMmFBl5qk+ffowduzYvZZl+fLlrF69muOPP578/Hzy8vLIy8ujrKyMgw8+mM8//7xK16CGeOutt7AsiyuuuKLavj0NkF60aBGjRo0iLS0tUr68vDzGjBlDKBSKvCc7TJw4kfT09Mjz/fffHyBSZ41t9OjR9O3bN/I8FArx0UcfMWHCBLp37x7Z3qFDByZPnsySJUsoKSmpco2pU6dWqYP999+fUCjEhg0b6lye+rynp59+ep3jiIjUl7otibQht912G71798blcpGdnU3v3r2x7fB3CBs2bMC27WrdVtq3b09aWlq1G6G6dCeqzcaNG4Fw15nd9enThw8//LBOA0A3bNhAz549I69p12vtGu/MM8/kjTfe4JJLLqFjx44ccsghHHfccRx22GF7jfHOO+/wz3/+k+XLl1cZC1LTDXTnzp2rbUtPT6eoqAgID1auqKigZ8+e1Y7r3bv3XpOn1atXA0TGLdSkuLi4ys14fa1du5YOHTpUSfKisWbNGlasWMHBBx9c4/5dxwZA9TrbUfYdddbYdv8c5+XlUV5eXutn0nEcNm3aRL9+/SLbd59yOC0tDahfmevznjbGz6KISLSUPIi0IcOGDau1b/oO0U6zuaeZlZq7rKwsXn75ZT788EPef/993n//febNm8dJJ53En//851rP++KLL7j88ssZPXo0f/jDH2jfvj0ej4eXXnqJ119/vdrxLperxuuYRuqXvuM6119/PYMGDarxmHjPvOM4DocccggXX3xxjft79epV5Xms62x3jfE53j1Z3aE+Za7Pe9qUs0OJiCh5EBEAunbtiuM4rFmzJvJNPUBOTg5FRUV07dq10WPu+Mb2l19+qbZv1apVZGZm1unmt2vXrqxYsQLHcarc0K1atapKPAhPKTp+/HjGjx+P4zjcfvvtzJ07l1//+tc1tgQAvPnmmyQkJDBr1qwq036+9NJLUZdxV+3atcPn87FmzZpq+2qqk93t6FaTkpJSZY2GWOjRowcffvghBQUFdWp96NGjB2VlZY1avliuI9GuXTsSExNr/Uzatl1ji9LeRFvmpnxPRUTqQ2MeRASAcePGAVSbrnT27NlV9u9NUlJS1N01OnTowKBBg3j55ZernPPjjz/y0UcfRR1zh8MOO4xt27axcOHCyLZgMMicOXNISkpi9OjRAOTn51c5z7btyHSfu09LuyuXy4VlWYRCoci29evX89///rdO5dz1emPHjuXtt9+OdKkC+Pnnn/nwww/3ev6QIUPo0aMH//rXvygtLa22f/cuQQ1x9NFHY4zh73//e7V9e/qG/bjjjmPp0qWRKVB3VVRURDAYrHNZdixoGIuuTC6Xi0MOOYT//ve/kSmMIZxEv/7664waNYqUlJQ6XzcxMTGq8jbleyoiUh9qeRARIDyY9+STT2bu3LkUFRUxevRovvnmG+bPn8+ECRMia0LszeDBg1m8eDGzZ8+mQ4cOdOvWrdrUlru6/vrrueSSS5g2bRqnnnpqZKrW1NTUGgfn7sm0adOYO3cuN954I9999x1du3blzTff5Msvv+T3v/995KbvlltuobCwkIMOOoiOHTuyceNGnn76aQYNGlSl1WV348aNY/bs2Vx88cVMnjyZ3Nxcnn32WXr06MGKFSvqVNYdrrzySj744APOOusszjjjDEKhEE8//TR9+/bd6zVt2+bOO+/kkksuYfLkyUyZMoWOHTuyZcsWPv30U1JSUnjkkUfqVa7dHXTQQZx44onMmTOHNWvWcOihh+I4DkuWLOHAAw+MrCOxu4suuoj//e9/XHbZZZx88skMHjyY8vJyfvzxR958803++9//0q5duzqVZfDgwUB4itSxY8ficrmYNGlSg1/jDldffTUff/wxZ555JmeeeSYul4u5c+fi9/v5v//7v3pdc/DgwTz33HP84x//oGfPnrRr167GcSBN+Z6KiNSHkgcRibjzzjvp1q0b8+fP5+233yY7O5tLL720TjfxN954I7fddhsPPPAAFRUVnHzyyXtMHsaMGcPMmTOZMWMGM2bMwO12M3r0aP7v//6vymw30fD5fMyZM4e//vWvzJ8/n5KSEnr37s306dOZMmVK5LgTTjiBF154gWeffZaioiLat2/Pcccdx5VXXllr/3WAgw8+mLvuuovHH3+cu+++m27duvG73/2ODRs21Dt5GDhwILNmzWL69OnMmDGDTp06ceWVV7Jt27aornnggQcyd+5c/vGPf/D0009TVlZG+/btI+s7NKbp06czYMAA/v3vf3PvvfeSmprKkCFDGDlyZK3nJCYmMmfOHB599FEWLVrEyy+/TEpKCr169eLKK6+s14rjRx99NOeccw4LFizg1VdfxRjTqMlDv379eOaZZ7jvvvt49NFHMcYwbNgw/vKXv+zxs7wnv/nNb9i4cSMzZ86ktLSUAw44oNZB5E35noqI1JVlYjUKTUREREREWhWNeRARERERkagoeRARERERkagoeRARERERkagoeRARERERkagoeRARERERkagoeRARERERkagoeRARERERkahokTggFHLIyyuNdzFajHbtklVfUVJd1Y3qq25UX9FTXdWN6it6qqu6aUh9tW9f90Ulm8p+B/4jZtf+8tNfx+za9aHkAXC5bCwLtFze3lmW6itaqqu6UX3VjeoreqqrulF9RU91VTetub4s24p3EZqMui2JiIiIiEhU1PIgIiIiItIAlkstDyIiIiIiIlWo5UFEREREpCHstvN9fNt5pSIiIiIi0iBqeRARERERaQCNeRAREREREdmNWh5ERERERBqgLa3zoORBRERERKQB1G1JRERERERkN2p5EBERERFpCE3VKm1Bbm4OV1/9ayZMGMuxxx5e67axY/fn/fffjeqas2Y9yvnnnxmbAkfhlVfmMWXKJA49dDQvvPBsk8f/8ssvGDt2f4qLi5s8toiIiEisqeWhlbrrrtt5443Xq20/4ICDuf/+hwCYO/dZcnNzmD37WVJSUmrd9sori0hNTYsq7hlnnMOpp05rpFcRtnDha8yYcR+LFr27x+NKS0v429/u5corr2HcuCMj5Y+VK674Ff36DeCqq66LbBs6dDivvLIo5rFFRESk+WhLYx6UPLRiBx44ht///rYq2zweb+T/GzeuZ8CAQXTv3mOP27KysqOOmZSUBCTVv9ANsGXLZoLBIAcfPJbs7JrLHAgE8Hg8MSuDx+OpU33VJNZlFBEREakvJQ/1FaisfZ9lgdvbeMd6EupePsDrrf1G9tRTj2fz5k0ALFq0gOOOm8zSpUuqbbv55tsZO3Z/7r77rxx22OEAbN68mT/96S4+/fQTAgE/PXv25tprb2Dw4CHMmvUoH3zwHk88sbPL0Guvvczzzz/Npk0b6dSpM6eeejpTppwGwKZNGznttBO46657+fe/5/L999/SrVsP/u//bmLIkGF8+eUX3H33HUC4+xTABRdcwkUXXVrl9Sxc+FrkuKlTTwTgxRdfZeHC1/jgg/c45ZSpPPXUv9i8eRMffPA5mzdv5oEH7mXJks+xLJsDDzyYa675P9q1ywKIvI7TTz+L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K1asMO3atTP/+c9/XG389dpV27ny5+uWv/Pp4mHMmDEmOTnZ9b3D4TA9e/Y0y5Yt+9n39unTp9If7i6Xk5Nj2rRpYz7//HPXtvHjx5vnn3/+mmK2kifytXjxYjNs2LArvi8vL8/ExsaaDz74wLXt4MGDpk2bNiYjI6Na8de1uhhfzz//vOnXr59xOp2ubb44vmqSK2OMKS8vNwkJCWbt2rXGGGOcTqfp0aOHSUlJcbXJy8sz7du3N++//74x5sdxtGvXLlebTz75xMTExLj94OONajtfldm5c6dp06aN+e6771zbqjouvYkncjVz5kwzderUK76HsXX1sTV16lTz8MMPu23zxbFlTM3zZYwxI0aMMH/605+MMf597artXFXGX65b/s5nb1sqLS3Vnj171L17d9c2u92u7t27KyMjo9aOk5+fL0mKjIx0275+/XolJiZqyJAh+uMf/6ji4uJaO6YneDJfR48eVc+ePdW3b19Nnz5dJ0+edO3bvXu3ysrK3I572223qXnz5vrqq69qdFxPqovxVVpaqn/+858aPXq0bDab2z5fGl+1kavi4mKVl5e7PmcnTpxQVlaWW58NGzZUfHy8q8+MjAw1atRIHTp0cLXp3r277Hb7VafSreaJfFWmoKBANptNjRo1ctv+6quvKjExUSNGjFBKSorKy8uv7UTqgCdz9fnnn6tbt24aMGCA5s6dq/Pnz7v2MbauPLays7P1ySefaMyYMRX2+dLYkmqeL2OM0tPTdeTIEXXp0kWS/167PJGryvjDdSsQBFsdwLU6f/68HA6HoqOj3bZHR0dXWKNwrZxOp1544QV17NhRbdq0cW0fMmSImjdvruuvv1779u3TokWLdOTIES1durRWjusJnspXXFyc5s+fr1tvvVVZWVn6y1/+ogcffFDr169XRESEsrOzFRISUuFCEB0draysrGs+rqfVxfjavHmz8vPzNXLkSLftvja+aiNXixYt0vXXX+/6D9OlsVFZn5fWy2RnZ+u6665z2x8cHKzIyEi/H1uX5+tyJSUlWrRokQYPHqyIiAjX9oceekh33HGHIiMjlZGRoRdffFFZWVl67rnnrv2EPMhTubr77rt17733qkWLFjp+/LhefPFFTZkyRe+++66CgoIYW1cZW2vXrlWDBg3Uv39/t+2+Nraka89Xfn6+evXqpdLSUtntds2d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",
      "text/plain": [
       "<Figure size 1000x600 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(1,1, figsize=(10,6)) \n",
    "\n",
    "im = ax.scatter(portfolios[\"volatility\"], portfolios[\"return\"], c=portfolios[\"sharpe ratio\"], s=20, edgecolor=None, cmap='RdYlBu')\n",
    "ax.set_title(\"Portfolios and efficient frontier\")\n",
    "ax.set_xlabel(\"volatility\")\n",
    "ax.set_ylabel(\"return\")\n",
    "ax.grid()\n",
    "\n",
    "# Draw the efficient frontier\n",
    "df = erk.efficient_frontier(50, daily_rets, cov_rets, periods_per_year)\n",
    "df.plot.line(x=\"volatility\", y=\"return\", style=\"--\", color=\"coral\", ax=ax, grid=True, label=\"Efficient frontier\")\n",
    "ax.set_xlim([0.125,0.33])\n",
    "\n",
    "fig.colorbar(im, ax=ax)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "393a3fcb",
   "metadata": {
    "papermill": {
     "duration": 0.031931,
     "end_time": "2024-05-31T20:07:13.110948",
     "exception": false,
     "start_time": "2024-05-31T20:07:13.079017",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**We will come back to the plot of the efficient frontier below**.\n",
    "\n",
    "We can see that if the investor is targeting **a return of $20\\%$** he could simply hold \n",
    "a portfolio **with volatility of about $17.5\\%$**, although there are many other portfolios that \n",
    "can guarantee the same return but with much higher volatilities such as $22.5\\%$. \n",
    "It is clear that one should carefully choose the weights of the portfolio. \n",
    "\n",
    "We can see, in particular, that there are **two important** portfolios:\n",
    "\n",
    "1. the **portfolio with the Global Minimum Volatility (GMV)**, i.e., the global minimum variance portfolio\n",
    "2. the **portfolio with the Maximum Sharpe Ratio (MSR)**.\n",
    "\n",
    "From the code above we can easily locate these two portfolios in our dataframe by looking at the lowest volatility and highest sharpe ratio \n",
    "and and recover the corresponding weights that have been stored."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "75c6d65f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T20:07:13.177982Z",
     "iopub.status.busy": "2024-05-31T20:07:13.177579Z",
     "iopub.status.idle": "2024-05-31T20:07:13.222001Z",
     "shell.execute_reply": "2024-05-31T20:07:13.220894Z"
    },
    "papermill": {
     "duration": 0.081202,
     "end_time": "2024-05-31T20:07:13.224605",
     "exception": false,
     "start_time": "2024-05-31T20:07:13.143403",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Global Minimum Volatility portfolio:\n",
      "- return      : 13.00%\n",
      "- volatility  : 14.00%\n",
      "- sharpe ratio: 0.92\n",
      "Maximum Sharpe Ratio portfolio:\n",
      "- return      : 22.00%\n",
      "- volatility  : 20.00%\n",
      "- sharpe ratio: 1.09\n"
     ]
    }
   ],
   "source": [
    "# find the portfolio with lowest volatility \n",
    "low_vol_portfolio = portfolios.iloc[ portfolios['volatility'].idxmin() ]\n",
    "print(\"Global Minimum Volatility portfolio:\")\n",
    "print(\"- return      : {:.2f}%\".format(low_vol_portfolio[0]*100) )\n",
    "print(\"- volatility  : {:.2f}%\".format(low_vol_portfolio[1]*100) )\n",
    "print(\"- sharpe ratio: {:.2f}\".format(low_vol_portfolio[2]) )\n",
    "\n",
    "# find the portfolio with highest sharpe ratio\n",
    "high_sharpe_portfolio = portfolios.iloc[ portfolios['sharpe ratio'].idxmax() ]\n",
    "print(\"Maximum Sharpe Ratio portfolio:\")\n",
    "print(\"- return      : {:.2f}%\".format(high_sharpe_portfolio[0]*100) )\n",
    "print(\"- volatility  : {:.2f}%\".format(high_sharpe_portfolio[1]*100) )\n",
    "print(\"- sharpe ratio: {:.2f}\".format(high_sharpe_portfolio[2]) )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "5b2789fe",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T20:07:13.291677Z",
     "iopub.status.busy": "2024-05-31T20:07:13.291293Z",
     "iopub.status.idle": "2024-05-31T20:07:13.910625Z",
     "shell.execute_reply": "2024-05-31T20:07:13.909481Z"
    },
    "papermill": {
     "duration": 0.656113,
     "end_time": "2024-05-31T20:07:13.913329",
     "exception": false,
     "start_time": "2024-05-31T20:07:13.257216",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(1,1, figsize=(10,6)) \n",
    "\n",
    "im = ax.scatter(portfolios[\"volatility\"], portfolios[\"return\"], c=portfolios[\"sharpe ratio\"], s=20, edgecolor=None, label=None, cmap='RdYlBu')\n",
    "ax.set_title(\"Portfolios and efficient frontier\")\n",
    "ax.set_xlabel(\"volatility\")\n",
    "ax.set_ylabel(\"return\")\n",
    "ax.grid()\n",
    "\n",
    "# Draw the efficient frontier\n",
    "df.plot.line(x=\"volatility\", y=\"return\", style=\"--\", color=\"coral\", ax=ax, grid=True, label=\"Efficient frontier\")\n",
    "\n",
    "ax.scatter(low_vol_portfolio[1],     low_vol_portfolio[0],     marker=\"X\", color='g', s=120, label=\"GMV portfolio\")\n",
    "ax.scatter(high_sharpe_portfolio[1], high_sharpe_portfolio[0], marker=\"X\", color='r', s=120, label=\"MSR portfolio\")\n",
    "\n",
    "ax.set_xlim([0.125,0.33])\n",
    "ax.legend()\n",
    "\n",
    "fig.colorbar(im, ax=ax)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "64c8f2e2",
   "metadata": {
    "papermill": {
     "duration": 0.033087,
     "end_time": "2024-05-31T20:07:13.980632",
     "exception": false,
     "start_time": "2024-05-31T20:07:13.947545",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Let us define the following function which we are going to use several time in what follows:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "8695d4bc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T20:07:14.050265Z",
     "iopub.status.busy": "2024-05-31T20:07:14.049831Z",
     "iopub.status.idle": "2024-05-31T20:07:14.092284Z",
     "shell.execute_reply": "2024-05-31T20:07:14.091304Z"
    },
    "papermill": {
     "duration": 0.08008,
     "end_time": "2024-05-31T20:07:14.094802",
     "exception": false,
     "start_time": "2024-05-31T20:07:14.014722",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def get_portfolio_features(weights, rets, covmat, risk_free_rate, periods_per_year):\n",
    "    # portfolio volatility\n",
    "    vol = erk.portfolio_volatility(weights, covmat)\n",
    "    vol = erk.annualize_vol(vol, periods_per_year)\n",
    "\n",
    "    # portfolio return\n",
    "    ret = erk.portfolio_return(weights, rets)\n",
    "\n",
    "    # portfolio sharpe ratio\n",
    "    shp = erk.sharpe_ratio(ret, risk_free_rate, periods_per_year, v=vol)\n",
    "\n",
    "    print(\"Portfolio return:       {:.2f}%\" .format(ret*100))\n",
    "    print(\"Portfolio volatility:   {:.2f}%\" .format(vol*100))\n",
    "    print(\"Portfolio sharpe ratio: {:.2f}\" .format(shp))\n",
    "    \n",
    "    return ret, vol, shp"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e2337d53",
   "metadata": {
    "papermill": {
     "duration": 0.034427,
     "end_time": "2024-05-31T20:07:14.163807",
     "exception": false,
     "start_time": "2024-05-31T20:07:14.129380",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### 5. Finding the optimal portfolios: minimizing the volatility \n",
    "\n",
    "In the experiments above, we found the optimal portfolios, i.e., the ones on the efficient frontier, by **simulating a high number of portfolios** and then plotting them. From the plot we could see what the efficient frontier looked like. \n",
    "However, we can find an optimal portfolio on the efficient frontier by **solving a minimization problem**, \n",
    "for example, by applying the **scipy optimize** method. \n",
    "\n",
    "\n",
    "For example, suppose we want to **find the portfolio (on the efficient frontier) which has the minimum volatility**. \n",
    "Then the minimization problem is:\n",
    "$$\n",
    "\\text{minimize} \\;\\; \\frac{1}{2} \\mathbf{w}^T\\Sigma\\mathbf{w}, \n",
    "$$\n",
    "subject to \n",
    "$$\n",
    "\\begin{cases}\n",
    "\\mathbf{w}^T \\mathbf{1} = 1, \\\\\n",
    "0 \\leq \\mathbf{w} \\leq 1.\n",
    "\\end{cases}\n",
    "$$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "ec43a24e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T20:07:14.235100Z",
     "iopub.status.busy": "2024-05-31T20:07:14.234170Z",
     "iopub.status.idle": "2024-05-31T20:07:14.279044Z",
     "shell.execute_reply": "2024-05-31T20:07:14.277967Z"
    },
    "papermill": {
     "duration": 0.083506,
     "end_time": "2024-05-31T20:07:14.281801",
     "exception": false,
     "start_time": "2024-05-31T20:07:14.198295",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "AMZN    0.300595\n",
       "KO      0.080584\n",
       "MSFT    0.205678\n",
       "dtype: float64"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Let us see the total (annual) returns of single companies we are investing in\n",
    "ann_rets = erk.annualize_rets(daily_rets, periods_per_year)\n",
    "ann_rets"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bdf77b35",
   "metadata": {
    "papermill": {
     "duration": 0.034081,
     "end_time": "2024-05-31T20:07:14.350978",
     "exception": false,
     "start_time": "2024-05-31T20:07:14.316897",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Now, we can call our minimizer which solves the minimization problem of finding the weights of the portfolio with minimum volatility. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "e93a63f8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T20:07:14.423727Z",
     "iopub.status.busy": "2024-05-31T20:07:14.422865Z",
     "iopub.status.idle": "2024-05-31T20:07:14.472871Z",
     "shell.execute_reply": "2024-05-31T20:07:14.471537Z"
    },
    "papermill": {
     "duration": 0.088668,
     "end_time": "2024-05-31T20:07:14.475421",
     "exception": false,
     "start_time": "2024-05-31T20:07:14.386753",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "optimal weights:\n",
      "  AMZN: 4.76%\n",
      "  KO:   81.77%\n",
      "  MSFT: 13.47%\n"
     ]
    }
   ],
   "source": [
    "optimal_weights = erk.minimize_volatility(ann_rets, cov_rets)\n",
    "print(\"optimal weights:\")\n",
    "print(\"  AMZN: {:.2f}%\".format(optimal_weights[0]*100))\n",
    "print(\"  KO:   {:.2f}%\".format(optimal_weights[1]*100))\n",
    "print(\"  MSFT: {:.2f}%\".format(optimal_weights[2]*100))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "817e41f0",
   "metadata": {
    "papermill": {
     "duration": 0.034083,
     "end_time": "2024-05-31T20:07:14.543824",
     "exception": false,
     "start_time": "2024-05-31T20:07:14.509741",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Let us compute the volatility of the portfolio constructed with these weights and locate it on the efficient frontier:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "89006acb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T20:07:14.614454Z",
     "iopub.status.busy": "2024-05-31T20:07:14.613523Z",
     "iopub.status.idle": "2024-05-31T20:07:15.208712Z",
     "shell.execute_reply": "2024-05-31T20:07:15.207437Z"
    },
    "papermill": {
     "duration": 0.633325,
     "end_time": "2024-05-31T20:07:15.210981",
     "exception": false,
     "start_time": "2024-05-31T20:07:14.577656",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Portfolio return:       10.79%\n",
      "Portfolio volatility:   13.84%\n",
      "Portfolio sharpe ratio: 0.78\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ret, vol, shp = get_portfolio_features(optimal_weights, ann_rets, cov_rets, risk_free_rate, periods_per_year)\n",
    "\n",
    "# Draw the efficient frontier\n",
    "fig, ax = plt.subplots(1,1, figsize=(8,4)) \n",
    "df = erk.efficient_frontier(50, daily_rets, cov_rets, periods_per_year)\n",
    "df.plot.line(x=\"volatility\", y=\"return\", style=\"--\", color=\"coral\", ax=ax, grid=True, label=\"Efficient frontier\")\n",
    "ax.scatter(vol, ret,  marker=\"X\", color='g', s=120, label=\"GMV portfolio\")\n",
    "ax.set_xlim([0.13,0.33])\n",
    "ax.legend()\n",
    "ax.set_title(\"Minimum volatility portfolio\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "04768124",
   "metadata": {
    "papermill": {
     "duration": 0.036125,
     "end_time": "2024-05-31T20:07:15.283314",
     "exception": false,
     "start_time": "2024-05-31T20:07:15.247189",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "We can also verify that the minimum volatility portfolio obtained by solving the minimization problem almost coincides \n",
    "with the one obtained from simulating a high number of portfolios as we have done before: "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "2f68432f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T20:07:15.358406Z",
     "iopub.status.busy": "2024-05-31T20:07:15.357981Z",
     "iopub.status.idle": "2024-05-31T20:07:15.401974Z",
     "shell.execute_reply": "2024-05-31T20:07:15.400598Z"
    },
    "papermill": {
     "duration": 0.084639,
     "end_time": "2024-05-31T20:07:15.404581",
     "exception": false,
     "start_time": "2024-05-31T20:07:15.319942",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GMV portfolio:\n",
      "\n",
      "- Monte carlo:\n",
      "  return:       13.00%\n",
      "  volatility:   14.00%\n",
      "  sharpe ratio: 0.92\n",
      "\n",
      "- Minimization problem:\n",
      "  return:       10.79%\n",
      "  volatility:   13.84%\n",
      "  sharpe ratio: 0.78\n"
     ]
    }
   ],
   "source": [
    "print(\"GMV portfolio:\\n\")\n",
    "print(\"- Monte carlo:\")\n",
    "print(\"  return:       {:.2f}%\" .format(low_vol_portfolio[0]*100))\n",
    "print(\"  volatility:   {:.2f}%\" .format(low_vol_portfolio[1]*100))\n",
    "print(\"  sharpe ratio: {:.2f}\" .format(low_vol_portfolio[2]))\n",
    "print(\"\\n- Minimization problem:\")\n",
    "print(\"  return:       {:.2f}%\" .format(ret*100))\n",
    "print(\"  volatility:   {:.2f}%\" .format(vol*100))\n",
    "print(\"  sharpe ratio: {:.2f}\" .format(shp))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "811ced6e",
   "metadata": {
    "papermill": {
     "duration": 0.034802,
     "end_time": "2024-05-31T20:07:15.474507",
     "exception": false,
     "start_time": "2024-05-31T20:07:15.439705",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#### Finding the optimal portfolios: minimizing the volatility given a fixed return\n",
    "\n",
    "What if we want to find the **portfolio (on the efficient frontier) with minimium volatility for a given a level of return**? \n",
    "In this case, we simply have to add a constrain in the minimization problem:\n",
    "$$\n",
    "\\text{minimize} \\;\\; \\frac{1}{2} \\mathbf{w}^T\\Sigma\\mathbf{w}, \n",
    "$$\n",
    "subject to \n",
    "$$\n",
    "\\begin{cases}\n",
    "\\mathbf{w}^T \\mathbf{R} = R_0, \\\\\n",
    "\\mathbf{w}^T \\mathbf{1} = 1, \\\\\n",
    "0 \\leq \\mathbf{w} \\leq 1.\n",
    "\\end{cases}\n",
    "$$\n",
    "where $R_0$ denotes a fixed level of expected return. For example, suppose we target the following total expected return $R_0=16\\%$:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "91368ac4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T20:07:15.546879Z",
     "iopub.status.busy": "2024-05-31T20:07:15.546127Z",
     "iopub.status.idle": "2024-05-31T20:07:15.584634Z",
     "shell.execute_reply": "2024-05-31T20:07:15.583620Z"
    },
    "papermill": {
     "duration": 0.077738,
     "end_time": "2024-05-31T20:07:15.587423",
     "exception": false,
     "start_time": "2024-05-31T20:07:15.509685",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "target_return = 0.16"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8c84a625",
   "metadata": {
    "papermill": {
     "duration": 0.034963,
     "end_time": "2024-05-31T20:07:15.658628",
     "exception": false,
     "start_time": "2024-05-31T20:07:15.623665",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Now, we can call again the minimizer with the option of solving the problem with the constrain for the given target return:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "bd5229ff",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T20:07:15.730522Z",
     "iopub.status.busy": "2024-05-31T20:07:15.730148Z",
     "iopub.status.idle": "2024-05-31T20:07:15.775972Z",
     "shell.execute_reply": "2024-05-31T20:07:15.774861Z"
    },
    "papermill": {
     "duration": 0.084876,
     "end_time": "2024-05-31T20:07:15.778625",
     "exception": false,
     "start_time": "2024-05-31T20:07:15.693749",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "optimal weights:\n",
      "  AMZN: 17.97%\n",
      "  KO:   50.15%\n",
      "  MSFT: 31.88%\n"
     ]
    }
   ],
   "source": [
    "optimal_weights = erk.minimize_volatility(ann_rets, cov_rets, target_return)\n",
    "print(\"optimal weights:\")\n",
    "print(\"  AMZN: {:.2f}%\".format(optimal_weights[0]*100))\n",
    "print(\"  KO:   {:.2f}%\".format(optimal_weights[1]*100))\n",
    "print(\"  MSFT: {:.2f}%\".format(optimal_weights[2]*100))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a55c9cbd",
   "metadata": {
    "papermill": {
     "duration": 0.034052,
     "end_time": "2024-05-31T20:07:15.847664",
     "exception": false,
     "start_time": "2024-05-31T20:07:15.813612",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Let us compute the volatility of the portfolio constructed with these weights. \n",
    "Also, we double check that the corresponding return is the target return that we have chosen (i.e., $16\\%$) and \n",
    "locate the portfolio on the efficient frontier:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "0201d9a8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T20:07:15.919848Z",
     "iopub.status.busy": "2024-05-31T20:07:15.919441Z",
     "iopub.status.idle": "2024-05-31T20:07:16.554033Z",
     "shell.execute_reply": "2024-05-31T20:07:16.553010Z"
    },
    "papermill": {
     "duration": 0.673635,
     "end_time": "2024-05-31T20:07:16.556446",
     "exception": false,
     "start_time": "2024-05-31T20:07:15.882811",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Portfolio return:       16.00%\n",
      "Portfolio volatility:   15.47%\n",
      "Portfolio sharpe ratio: 1.03\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ret, vol, shp = get_portfolio_features(optimal_weights, ann_rets, cov_rets, risk_free_rate, periods_per_year)\n",
    "\n",
    "# Draw the efficient frontier\n",
    "fig, ax = plt.subplots(1,1, figsize=(8,4)) \n",
    "df = erk.efficient_frontier(50, daily_rets, cov_rets, periods_per_year)\n",
    "df.plot.line(x=\"volatility\", y=\"return\", style=\"--\", color=\"coral\", ax=ax, grid=True, label=\"Efficient frontier\")\n",
    "ax.scatter(vol, target_return,  marker=\"X\", color='g', s=120, label=\"min. volatility port.\")\n",
    "ax.set_xlim([0.13,0.33])\n",
    "ax.legend()\n",
    "ax.set_title(\"Minimum Volatility portfolio for given return of $16\\%$\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a9a9ed96",
   "metadata": {
    "papermill": {
     "duration": 0.035706,
     "end_time": "2024-05-31T20:07:16.628117",
     "exception": false,
     "start_time": "2024-05-31T20:07:16.592411",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Recall that **the return of a portfolio will be some value between the minimum and the maximum return from the assets composing the portfolio**. That is, given the same three companies, we cannot achieve a return of, say $40\\%$ since the maximum return achievable is about $30\\%$ from Amazon. \n",
    "In fact, if we run the minimizer with a target return equal to $40\\%$ we will get zero weights to all assets but Amazon:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "73ab9d56",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T20:07:16.701045Z",
     "iopub.status.busy": "2024-05-31T20:07:16.700668Z",
     "iopub.status.idle": "2024-05-31T20:07:16.931534Z",
     "shell.execute_reply": "2024-05-31T20:07:16.930320Z"
    },
    "papermill": {
     "duration": 0.270236,
     "end_time": "2024-05-31T20:07:16.933925",
     "exception": false,
     "start_time": "2024-05-31T20:07:16.663689",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "optimal weights:\n",
      "  AMZN: 100.00%\n",
      "  KO:   0.00%\n",
      "  MSFT: 0.00%\n"
     ]
    }
   ],
   "source": [
    "optimal_weights = erk.minimize_volatility(ann_rets, cov_rets, 0.4)\n",
    "print(\"optimal weights:\")\n",
    "print(\"  AMZN: {:.2f}%\".format(optimal_weights[0]*100))\n",
    "print(\"  KO:   {:.2f}%\".format(optimal_weights[1]*100))\n",
    "print(\"  MSFT: {:.2f}%\".format(optimal_weights[2]*100))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "78ceb722",
   "metadata": {
    "papermill": {
     "duration": 0.035515,
     "end_time": "2024-05-31T20:07:17.004683",
     "exception": false,
     "start_time": "2024-05-31T20:07:16.969168",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Finding the optimal portfolios: maximizing the sharpe ratio \n",
    "\n",
    "Now, consider the case of finding **the portfolio (on the efficient frontier) with the highest sharpe ratio**. \n",
    "\n",
    "Note that scipy offers a **minimize** method, but no a **maximize** a method, and we may then conclude \n",
    "that we are not able to find such a portfolio by solving an optimization problem. \n",
    "However, **the maximization of the sharpe ratio is nothing but the minimization of the negative sharpe ratio**. \n",
    "That is, we have \n",
    "$$\n",
    "\\text{minimize} \\;\\; -  \\frac{R_p - r_f}{\\sigma_p} =: \\text{SR} \n",
    "$$\n",
    "subject to \n",
    "$$\n",
    "\\begin{cases}\n",
    "\\mathbf{w}^T \\mathbf{1} = 1, \\\\\n",
    "0 \\leq \\mathbf{w} \\leq 1.\n",
    "\\end{cases}\n",
    "$$\n",
    "\n",
    "Let us use our minimizer:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "da76cfeb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T20:07:17.078470Z",
     "iopub.status.busy": "2024-05-31T20:07:17.077995Z",
     "iopub.status.idle": "2024-05-31T20:07:17.124445Z",
     "shell.execute_reply": "2024-05-31T20:07:17.123314Z"
    },
    "papermill": {
     "duration": 0.086653,
     "end_time": "2024-05-31T20:07:17.127220",
     "exception": false,
     "start_time": "2024-05-31T20:07:17.040567",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "optimal weights:\n",
      "  AMZN: 36.91%\n",
      "  KO:   24.76%\n",
      "  MSFT: 38.33%\n"
     ]
    }
   ],
   "source": [
    "optimal_weights = erk.maximize_shape_ratio(ann_rets, cov_rets, risk_free_rate, periods_per_year)\n",
    "print(\"optimal weights:\")\n",
    "print(\"  AMZN: {:.2f}%\".format(optimal_weights[0]*100))\n",
    "print(\"  KO:   {:.2f}%\".format(optimal_weights[1]*100))\n",
    "print(\"  MSFT: {:.2f}%\".format(optimal_weights[2]*100))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "539d8147",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T20:07:17.202809Z",
     "iopub.status.busy": "2024-05-31T20:07:17.202358Z",
     "iopub.status.idle": "2024-05-31T20:07:17.798782Z",
     "shell.execute_reply": "2024-05-31T20:07:17.797623Z"
    },
    "papermill": {
     "duration": 0.637283,
     "end_time": "2024-05-31T20:07:17.801452",
     "exception": false,
     "start_time": "2024-05-31T20:07:17.164169",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Portfolio return:       20.97%\n",
      "Portfolio volatility:   19.25%\n",
      "Portfolio sharpe ratio: 1.09\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ret, vol, shp = get_portfolio_features(optimal_weights, ann_rets, cov_rets, risk_free_rate, periods_per_year)\n",
    "\n",
    "# Draw the efficient frontier\n",
    "fig, ax = plt.subplots(1,1, figsize=(8,4)) \n",
    "df = erk.efficient_frontier(50, daily_rets, cov_rets, periods_per_year)\n",
    "df.plot.line(x=\"volatility\", y=\"return\", style=\"--\", color=\"coral\", ax=ax, grid=True, label=\"Efficient frontier\")\n",
    "ax.scatter(vol, ret,  marker=\"X\", color='r', s=120, label=\"highest sharpe ratio port.\")\n",
    "ax.set_xlim([0.13,0.33])\n",
    "ax.legend()\n",
    "ax.set_title(\"Maximum Sharpe Ratio portfolio (SR={:.2f})\".format(shp))\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8db25055",
   "metadata": {
    "papermill": {
     "duration": 0.036922,
     "end_time": "2024-05-31T20:07:17.875656",
     "exception": false,
     "start_time": "2024-05-31T20:07:17.838734",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "and let us see how these numbers differ from those obtained from the Monte Carlo simulation:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "63ba9ea7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T20:07:17.950784Z",
     "iopub.status.busy": "2024-05-31T20:07:17.950356Z",
     "iopub.status.idle": "2024-05-31T20:07:17.993796Z",
     "shell.execute_reply": "2024-05-31T20:07:17.992630Z"
    },
    "papermill": {
     "duration": 0.0844,
     "end_time": "2024-05-31T20:07:17.996209",
     "exception": false,
     "start_time": "2024-05-31T20:07:17.911809",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MSR portfolio:\n",
      "\n",
      "- Monte carlo:\n",
      "  return:       22.00%\n",
      "  volatility:   20.00%\n",
      "  sharpe ratio: 1.09\n",
      "\n",
      "- Minimization problem:\n",
      "  return:       20.97%\n",
      "  volatility:   19.25%\n",
      "  sharpe ratio: 1.09\n"
     ]
    }
   ],
   "source": [
    "print(\"MSR portfolio:\\n\")\n",
    "print(\"- Monte carlo:\")\n",
    "print(\"  return:       {:.2f}%\" .format(high_sharpe_portfolio[0]*100))\n",
    "print(\"  volatility:   {:.2f}%\" .format(high_sharpe_portfolio[1]*100))\n",
    "print(\"  sharpe ratio: {:.2f}\" .format(high_sharpe_portfolio[2]))\n",
    "print(\"\\n- Minimization problem:\")\n",
    "print(\"  return:       {:.2f}%\" .format(ret*100))\n",
    "print(\"  volatility:   {:.2f}%\" .format(vol*100))\n",
    "print(\"  sharpe ratio: {:.2f}\" .format(shp))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b723bdfc",
   "metadata": {
    "papermill": {
     "duration": 0.03706,
     "end_time": "2024-05-31T20:07:18.070912",
     "exception": false,
     "start_time": "2024-05-31T20:07:18.033852",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#### 6. Finding the optimal portfolios: maximize the sharpe ratio given a fixed volatility \n",
    "\n",
    "Similarly to what we have done before, we can find the **portfolio (on the efficient frontier) with highest sharpe ratio \n",
    "for a given a level of volatility**. In this case, we simply add a constrain in the minimization problem:\n",
    "$$\n",
    "\\text{minimize} \\;\\; -  \\frac{R_p - r_f}{\\sigma_p} =: \\text{SR} \n",
    "$$\n",
    "subject to \n",
    "$$\n",
    "\\begin{cases}\n",
    "\\frac{1}{2} \\mathbf{w}^T\\Sigma\\mathbf{w} = \\sigma_0, \\\\\n",
    "\\mathbf{w}^T \\mathbf{1} = 1, \\\\\n",
    "0 \\leq \\mathbf{w} \\leq 1.\n",
    "\\end{cases}\n",
    "$$\n",
    "where $\\sigma_0$ denotes a fixed level of volatility. For example, suppose we target the following total volatility of $\\sigma_0=20\\%$:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "5790e10b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T20:07:18.146902Z",
     "iopub.status.busy": "2024-05-31T20:07:18.146455Z",
     "iopub.status.idle": "2024-05-31T20:07:18.197103Z",
     "shell.execute_reply": "2024-05-31T20:07:18.195974Z"
    },
    "papermill": {
     "duration": 0.091715,
     "end_time": "2024-05-31T20:07:18.199631",
     "exception": false,
     "start_time": "2024-05-31T20:07:18.107916",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "optimal weights:\n",
      "  AMZN: 39.46%\n",
      "  KO:   20.30%\n",
      "  MSFT: 40.25%\n"
     ]
    }
   ],
   "source": [
    "target_volatility = 0.2\n",
    "optimal_weights = erk.maximize_shape_ratio(ann_rets, cov_rets, risk_free_rate, periods_per_year, target_volatility)\n",
    "print(\"optimal weights:\")\n",
    "print(\"  AMZN: {:.2f}%\".format(optimal_weights[0]*100))\n",
    "print(\"  KO:   {:.2f}%\".format(optimal_weights[1]*100))\n",
    "print(\"  MSFT: {:.2f}%\".format(optimal_weights[2]*100))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "1e299972",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T20:07:18.275275Z",
     "iopub.status.busy": "2024-05-31T20:07:18.274837Z",
     "iopub.status.idle": "2024-05-31T20:07:18.874649Z",
     "shell.execute_reply": "2024-05-31T20:07:18.873566Z"
    },
    "papermill": {
     "duration": 0.640527,
     "end_time": "2024-05-31T20:07:18.876989",
     "exception": false,
     "start_time": "2024-05-31T20:07:18.236462",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Portfolio return:       21.77%\n",
      "Portfolio volatility:   20.00%\n",
      "Portfolio sharpe ratio: 1.09\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ret, vol, shp = get_portfolio_features(optimal_weights, ann_rets, cov_rets, risk_free_rate, periods_per_year)\n",
    "\n",
    "# Draw the efficient frontier\n",
    "fig, ax = plt.subplots(1,1, figsize=(8,4)) \n",
    "df = erk.efficient_frontier(50, daily_rets, cov_rets, periods_per_year)\n",
    "df.plot.line(x=\"volatility\", y=\"return\", style=\"--\", color=\"coral\", ax=ax, grid=True, label=\"Efficient frontier\")\n",
    "ax.scatter(vol, ret,  marker=\"X\", color='r', s=120, label=\"highes sharpe ratio port.\")\n",
    "ax.set_xlim([0.13,0.33])\n",
    "ax.legend()\n",
    "ax.set_title(\"Maximum Sharpe Ratio portfolio for given volatility of $20\\%$ (SR={:.2f})\".format(shp))\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "49aa475e",
   "metadata": {
    "papermill": {
     "duration": 0.038231,
     "end_time": "2024-05-31T20:07:18.953242",
     "exception": false,
     "start_time": "2024-05-31T20:07:18.915011",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### 7. Observation on constraints\n",
    "\n",
    "It is worth mentioning that so far we have decided to invest all of our capital and, at the same time, our strategy has been **long-only**. That is, the weights that we allocate to the assets sum to $1$ \n",
    "and all of them are positive (because we **buy** the assets). \n",
    "In particular, these two conditions were imposed when solving the minimization problems. \n",
    "\n",
    "However, **we could in principle not invest all of our capital**, which means that we at do not necessarily \n",
    "get weights that sum to $1$, and also we may decide to not buy all the assets. We could **short selling** some of them (by short shelling we mean selling an asset that we do not have and that we borrow from someone else).\n",
    "\n",
    "#### Short selling and not normalized weigths: minimum volatility portofolio given a fixed return \n",
    "\n",
    "We can solve the minimization problem without imposing the constraint on positive weigths and the constraint that the weights sum to $1$, i.e., simply:\n",
    "$$\n",
    "\\text{minimize} \\;\\; \\frac{1}{2} \\mathbf{w}^T\\Sigma\\mathbf{w}, \n",
    "$$\n",
    "subject to \n",
    "$$\n",
    "\\begin{cases}\n",
    "\\mathbf{w}^T \\mathbf{R} = R_0, \n",
    "\\end{cases}\n",
    "$$\n",
    "in the case of finding the minimum volatility portfolio for a fixed return. \n",
    "In this case we are allowed to **short sell** the asset and in principle we do not have to invest all of our capital.\n",
    "\n",
    "For such a problem we can find the analytical solution to the problem by using the **Lagrange multipliers**. \n",
    "We define the **Lagrangian** of the problem:\n",
    "$$\n",
    "\\mathcal{L}(\\mathbf{w}, \\lambda) := \\frac{1}{2} \\mathbf{w}^T\\Sigma\\mathbf{w} - \\lambda(  \\mathbf{w}^T \\mathbf{R} - R_0 ),\n",
    "$$\n",
    "and put the partial derivatives to zero:\n",
    "$$\n",
    "\\begin{cases}\n",
    "\\frac{\\partial\\mathcal{L}}{\\partial \\mathbf{w}} &= \\frac{1}{2} (2\\Sigma \\mathbf{w}) - \\lambda  \\mathbf{R} = 0, \\\\\n",
    "\\frac{\\partial\\mathcal{L}}{\\partial \\lambda} &=  - \\mathbf{w}^T \\mathbf{R} + R_0 = 0.\n",
    "\\end{cases}\n",
    "$$\n",
    "From the first equation, we get:\n",
    "$$\n",
    "\\Sigma \\mathbf{w} - \\lambda  \\mathbf{R} = 0 \n",
    "\\quad\\Longrightarrow\\quad \n",
    "\\mathbf{w} = \\lambda \\Sigma^{-1}\\mathbf{R},  \n",
    "$$\n",
    "and inserting in the second equation:\n",
    "$$\n",
    "- ( \\lambda \\Sigma^{-1}\\mathbf{R} )^T \\mathbf{R} + R_0 = 0 \n",
    "\\quad\\Longrightarrow\\quad \n",
    "\\lambda \\mathbf{R}^T \\Sigma^{-1} \\mathbf{R} = R_0\n",
    "\\quad\\Longrightarrow\\quad \n",
    "\\lambda = \\frac{R_0}{\\mathbf{R}^T \\Sigma^{-1} \\mathbf{R}}.\n",
    "$$\n",
    "Note that since $\\Sigma$ was symmetric, so is $\\Sigma^{-1}$, from which $(\\Sigma^{-1})^T = \\Sigma^{-1}$. \n",
    "We can then insert $\\lambda$ back into the first equation and obtain:\n",
    "$$\n",
    "\\mathbf{w}^* = R_0 \\frac{\\Sigma^{-1}\\mathbf{R}}{\\mathbf{R}^T \\Sigma^{-1} \\mathbf{R}},\n",
    "$$\n",
    "which is therefore the analytical expression for the weights. Notice that since we have not imposed the constraint \n",
    "on the normalisation, we are not guaranteed that such vector of weights sum to $1$. "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7a8812a8",
   "metadata": {
    "papermill": {
     "duration": 0.037633,
     "end_time": "2024-05-31T20:07:19.028908",
     "exception": false,
     "start_time": "2024-05-31T20:07:18.991275",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#### 7.1 Short selling and normalized weigths: minimum volatility portofolio given a fixed return \n",
    "\n",
    "Analogously, we can also also fin the analytical expression of optimal weights in case we add the condition that the weigths sum to $1$, but without requiring that they have to be all positive, i.e.:\n",
    "$$\n",
    "\\text{minimize} \\;\\; \\frac{1}{2} \\mathbf{w}^T\\Sigma\\mathbf{w}, \n",
    "$$\n",
    "subject to \n",
    "$$\n",
    "\\begin{cases}\n",
    "\\mathbf{w}^T \\mathbf{R} &= R_0,  \\\\\n",
    "\\mathbf{w}^T \\mathbf{1} &= 1.\n",
    "\\end{cases}\n",
    "$$\n",
    "This is again the case in which we can **short sell** the asset but this time we invest all of the capital. \n",
    "\n",
    "We define the Lagrangian:\n",
    "$$\n",
    "\\mathcal{L}(\\mathbf{w}, \\lambda) := \\frac{1}{2} \\mathbf{w}^T\\Sigma\\mathbf{w} \n",
    "- \\lambda( \\mathbf{w}^T \\mathbf{R} - R_0) - \\delta(\\mathbf{w}^T\\mathbf{1}-1),\n",
    "$$\n",
    "and put the partial derivatives to zero:\n",
    "$$\n",
    "\\begin{cases}\n",
    "\\frac{\\partial\\mathcal{L}}{\\partial \\mathbf{w}} &= \\frac{1}{2} (2\\Sigma \\mathbf{w}) - \\lambda \\mathbf{R} - \\delta \\mathbf{1}= 0, \\\\\n",
    "\\frac{\\partial\\mathcal{L}}{\\partial \\lambda} &=  - \\mathbf{w}^T \\mathbf{R} + R_0 = 0, \\\\\n",
    "\\frac{\\partial\\mathcal{L}}{\\partial \\lambda} &=  - \\mathbf{w}^T \\mathbf{1} + R_0 = 0.\n",
    "\\end{cases}\n",
    "$$\n",
    "From the first equation we get:\n",
    "$$\n",
    "\\mathbf{w} = \\Sigma^{-1}(\\lambda \\mathbf{R} + \\delta\\mathbf{1}), \n",
    "$$\n",
    "and we can insert it in the second and the third equation, respectively:\n",
    "\\begin{cases}\n",
    "\\left(\\Sigma^{-1}(\\lambda \\mathbf{R} + \\delta\\mathbf{1}) \\right)^T\\mathbf{R} \n",
    "&= \\lambda \\mathbf{R}^T\\Sigma^{-1}\\mathbf{R} + \\delta\\mathbf{1}\\Sigma^{-1}\\mathbf{R} = R_0, \\\\\n",
    "\\left(\\Sigma^{-1}(\\lambda \\mathbf{R} + \\delta\\mathbf{1}) \\right)^T\\mathbf{1} \n",
    "&= \\lambda \\mathbf{R}^T\\Sigma^{-1}\\mathbf{1} + \\delta\\mathbf{1}\\Sigma^{-1}\\mathbf{1} = 1.\n",
    "\\end{cases}\n",
    "Let us define the following fixed numbers:\n",
    "$$\n",
    "\\begin{cases}\n",
    "A & := \\mathbf{R}^T \\Sigma^{-1} \\mathbf{R},  \\\\\n",
    "B & := \\mathbf{1}^T \\Sigma^{-1} \\mathbf{R} \\equiv \\mathbf{R}^T \\Sigma^{-1} \\mathbf{1}, \\\\\n",
    "C & := \\mathbf{1}^T \\Sigma^{-1} \\mathbf{1},\n",
    "\\end{cases}\n",
    "$$\n",
    "where notice that in B the second equation is true since $\\Sigma^{-1}$ is a symmetric matrix. Hence we have the following system to solve:\n",
    "$$\n",
    "\\begin{cases}\n",
    "\\lambda A + \\delta B &= R_0, \\\\\n",
    "\\lambda B + \\delta C &= 1.\n",
    "\\end{cases}\n",
    "$$\n",
    "From the second equation we find $\\lambda$ and put it into the first equation:\n",
    "$$\n",
    "\\lambda = \\frac{1-\\delta C}{B}\n",
    "\\quad\\Longrightarrow\\quad \n",
    "\\frac{1-\\delta C}{B} A + \\delta B = R_0\n",
    "\\quad\\text{from which we find}\\quad\n",
    "\\delta = \\frac{R_0B - A}{B^2-AC}.\n",
    "$$\n",
    "Now, we put $\\delta$ back into $\\lambda$:\n",
    "$$\n",
    "\\lambda = \\frac{1 - \\frac{R_0 B-A}{B^2-AC}C }{B} = \\frac{B - R_0 C}{B^2-AC}.\n",
    "$$\n",
    "Finally, we can put both $\\lambda$ and $\\delta$ we have just find back into $\\mathbf{w}$ and find the optimal weight:\n",
    "$$\n",
    "\\mathbf{w}^*  \n",
    "= \\lambda \\Sigma^{-1} \\mathbf{R} + \\delta \\Sigma^{-1} \\mathbf{1} \n",
    "= \\frac{B - R_0 C}{B^2-AC} \\Sigma^{-1} \\mathbf{R}  +  \\frac{R_0B - A}{B^2-AC}  \\Sigma^{-1}\\mathbf{1} \n",
    "= \\underbrace{ \\frac{1}{B^2-AC}\\left(B\\Sigma^{-1}\\mathbf{R} - A\\Sigma^{-1}\\mathbf{1} \\right) }_{:= \\mathbf{f} }\n",
    "+ R_0 \\Bigl( \\underbrace{ \\frac{1}{B^2-AC}\\left(B\\Sigma^{-1}\\mathbf{1} - C\\Sigma^{-1}\\mathbf{R} \\right) }_{:= \\mathbf{g} }  \\Bigr)\n",
    "= \\mathbf{f} + R_0 \\mathbf{g}.\n",
    "$$"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c22ff67e",
   "metadata": {
    "papermill": {
     "duration": 0.037798,
     "end_time": "2024-05-31T20:07:19.104580",
     "exception": false,
     "start_time": "2024-05-31T20:07:19.066782",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### 8. Maximizing the sharpe ratio portfolio in presence of non null risk-free rate\n",
    "\n",
    "Recall that a **risk-free asset** is an (hypothetical) asset with a risk-free rate. For example, **short-term government securities (such as US treasury bills)** are used as a risk-free asset since **they pay a fixed interest rate and have exceptionally low default risk**. \n",
    "\n",
    "The risk-free asset has zero volatility. Furthermore, it is also uncorrelated with any other asset since, \n",
    "by definition, its volatility is zero. Therefore, when combined with any other asset in a portfolio, \n",
    "**the change in return is linearly related to the change in risk** as the proportions in the combination vary.\n",
    "\n",
    "#### 8.1 The capital market line (CML)\n",
    "\n",
    "When a risk-free asset is introduced, there will be a line satisfying:\n",
    "\n",
    " 1. it is tangent to the curve at the risky portfolio with the highest Sharpe ratio; \n",
    " 2. its vertical intercept represents a portfolio with $100\\%$ of holdings in the risk-free asset; \n",
    " 3. the tangency with the curve represents the highest sharpe ratio portfolio with no risk-free holdings and $100%$ of risky assets; \n",
    " assets held in the portfolio occurring at the tangency point; \n",
    " 4. points on this line represent portfolios containing positive amounts of both the risky assets and the risk-free asset; \n",
    " \n",
    "This efficient line is called the **Capital Market Line (CML)**, and its given by:\n",
    "$$\n",
    "R_{CML} = R_{f} + \\sigma_{CML}\\frac{R_{p} - R_{f}}{\\sigma_{p}}, \n",
    "$$\n",
    "where $R_p$ and $\\sigma_p$ are the return and the volatility of the risky portfolio with no risk free asset, respectively, \n",
    "$R_f$ denotes the risk-free rate, and $R_{CML}$ and $\\sigma_{CML}$ denote the return and the volatility of the \n",
    "portfolio combining both risky assets and the risk-free asset, respectively."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "83152842",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T20:07:19.184338Z",
     "iopub.status.busy": "2024-05-31T20:07:19.183386Z",
     "iopub.status.idle": "2024-05-31T20:07:19.231488Z",
     "shell.execute_reply": "2024-05-31T20:07:19.230040Z"
    },
    "papermill": {
     "duration": 0.09049,
     "end_time": "2024-05-31T20:07:19.233840",
     "exception": false,
     "start_time": "2024-05-31T20:07:19.143350",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "optimal weights:\n",
      "  AMZN: 55.58%\n",
      "  KO:   0.00%\n",
      "  MSFT: 44.42%\n"
     ]
    }
   ],
   "source": [
    "risk_free_rate = 0.06\n",
    "optimal_weights = erk.maximize_shape_ratio(ann_rets, cov_rets, risk_free_rate, periods_per_year)\n",
    "print(\"optimal weights:\")\n",
    "print(\"  AMZN: {:.2f}%\".format(optimal_weights[0]*100))\n",
    "print(\"  KO:   {:.2f}%\".format(optimal_weights[1]*100))\n",
    "print(\"  MSFT: {:.2f}%\".format(optimal_weights[2]*100))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "eac38580",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T20:07:19.312509Z",
     "iopub.status.busy": "2024-05-31T20:07:19.311953Z",
     "iopub.status.idle": "2024-05-31T20:07:19.352899Z",
     "shell.execute_reply": "2024-05-31T20:07:19.351434Z"
    },
    "papermill": {
     "duration": 0.083045,
     "end_time": "2024-05-31T20:07:19.355277",
     "exception": false,
     "start_time": "2024-05-31T20:07:19.272232",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Portfolio return:       25.84%\n",
      "Portfolio volatility:   24.20%\n",
      "Portfolio sharpe ratio: 0.82\n"
     ]
    }
   ],
   "source": [
    "ret, vol, shp = get_portfolio_features(optimal_weights, ann_rets, cov_rets, risk_free_rate, periods_per_year)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d7230e47",
   "metadata": {
    "papermill": {
     "duration": 0.040222,
     "end_time": "2024-05-31T20:07:19.433653",
     "exception": false,
     "start_time": "2024-05-31T20:07:19.393431",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Let us plot the efficient frontier and the capital market line using the optional argument in our plot method:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "049b05d4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T20:07:19.512434Z",
     "iopub.status.busy": "2024-05-31T20:07:19.512010Z",
     "iopub.status.idle": "2024-05-31T20:07:19.988704Z",
     "shell.execute_reply": "2024-05-31T20:07:19.987651Z"
    },
    "papermill": {
     "duration": 0.519294,
     "end_time": "2024-05-31T20:07:19.991310",
     "exception": false,
     "start_time": "2024-05-31T20:07:19.472016",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df, ax = erk.efficient_frontier(40, daily_rets, cov_rets, periods_per_year, risk_free_rate=risk_free_rate, \n",
    "                                iplot=True, cml=True)\n",
    "ax.set_title(\"Maximum Sharpe Ratio portfolio {} for risk free rate {}%\".format(np.round(shp,2),risk_free_rate*100))\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "59922b74",
   "metadata": {
    "papermill": {
     "duration": 0.038554,
     "end_time": "2024-05-31T20:07:20.069053",
     "exception": false,
     "start_time": "2024-05-31T20:07:20.030499",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "The introduction of the risk-free asset as a possible component of the portfolio has improved the range of volatility-return combinations available since **everywhere, except at the tangency portfolio, the CML provides a higher return than the (old) efficient frontier does \n",
    "at every possible volatility.** "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "aa3784ef",
   "metadata": {
    "papermill": {
     "duration": 0.042538,
     "end_time": "2024-05-31T20:07:20.150424",
     "exception": false,
     "start_time": "2024-05-31T20:07:20.107886",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Note that the efficient frontier method has other optional parameter to plot the highest sharpe ratio, the minimum volatility, and the equally weigthed portfolio as well:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "7025ca4e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T20:07:20.229308Z",
     "iopub.status.busy": "2024-05-31T20:07:20.228899Z",
     "iopub.status.idle": "2024-05-31T20:07:21.132495Z",
     "shell.execute_reply": "2024-05-31T20:07:21.131264Z"
    },
    "papermill": {
     "duration": 0.945839,
     "end_time": "2024-05-31T20:07:21.134825",
     "exception": false,
     "start_time": "2024-05-31T20:07:20.188986",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "risk_free_rate = 0.05\n",
    "df, ax = erk.efficient_frontier(90, daily_rets, cov_rets, periods_per_year, risk_free_rate=risk_free_rate, \n",
    "                                iplot=True, hsr=True, cml=True, mvp=True, ewp=True)\n",
    "ax.set_title(\"Maximum Sharpe ratio portfolio {} for risk free rate {}%\".format(np.round(shp,2),risk_free_rate*100))\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "bf3c2df2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T20:07:21.218669Z",
     "iopub.status.busy": "2024-05-31T20:07:21.218223Z",
     "iopub.status.idle": "2024-05-31T20:07:21.266204Z",
     "shell.execute_reply": "2024-05-31T20:07:21.265121Z"
    },
    "papermill": {
     "duration": 0.092933,
     "end_time": "2024-05-31T20:07:21.268606",
     "exception": false,
     "start_time": "2024-05-31T20:07:21.175673",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>88</th>\n",
       "      <td>0.311025</td>\n",
       "      <td>0.298123</td>\n",
       "      <td>0.797759</td>\n",
       "      <td>0.973956</td>\n",
       "      <td>2.220446e-16</td>\n",
       "      <td>0.026044</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>89</th>\n",
       "      <td>0.316378</td>\n",
       "      <td>0.300595</td>\n",
       "      <td>0.792075</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.437855e-16</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>90</th>\n",
       "      <td>0.239873</td>\n",
       "      <td>0.256689</td>\n",
       "      <td>0.861661</td>\n",
       "      <td>0.537433</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.462567</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>91</th>\n",
       "      <td>0.138354</td>\n",
       "      <td>0.107907</td>\n",
       "      <td>0.418544</td>\n",
       "      <td>0.047596</td>\n",
       "      <td>8.176900e-01</td>\n",
       "      <td>0.134714</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>92</th>\n",
       "      <td>0.180093</td>\n",
       "      <td>0.195619</td>\n",
       "      <td>0.808577</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>3.333333e-01</td>\n",
       "      <td>0.333333</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           0         1         2         3             4         5\n",
       "88  0.311025  0.298123  0.797759  0.973956  2.220446e-16  0.026044\n",
       "89  0.316378  0.300595  0.792075  1.000000  1.437855e-16  0.000000\n",
       "90  0.239873  0.256689  0.861661  0.537433  0.000000e+00  0.462567\n",
       "91  0.138354  0.107907  0.418544  0.047596  8.176900e-01  0.134714\n",
       "92  0.180093  0.195619  0.808577  0.333333  3.333333e-01  0.333333"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.tail()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "461114d3",
   "metadata": {
    "papermill": {
     "duration": 0.040108,
     "end_time": "2024-05-31T20:07:21.349393",
     "exception": false,
     "start_time": "2024-05-31T20:07:21.309285",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### 9. Maximizing the sharpe ratio = Minimizing volatility when we invest also in a risk free asset\n",
    "\n",
    "Suppose that along with the set of risky assets there is also a risk-free asset with volatility zero and return equal to the risk-free rate $R_f$. In this case, we may want to minimize the volatility of the portfolio (i.e., the volatility of the part of the portfolio invested in the risky assets, since the the risk-free asset, by definition, is risk free) in which we have allocated some weights $\\mathbf{w}$ in the risky assets and the remaining part of our capital, i.e., $1-\\mathbf{w}^T\\mathbf{1}$, in the risk-free asset:\n",
    "$$\n",
    "\\text{minimize} \\;\\; \\frac{1}{2} \\mathbf{w}^T\\Sigma\\mathbf{w}, \n",
    "$$\n",
    "subject to \n",
    "$$\n",
    "\\begin{cases}\n",
    "\\mathbf{w}^T \\mathbf{R} + (1 - \\mathbf{w}^T\\mathbf{1})R_f &= R_0,  \\\\\n",
    "\\end{cases}\n",
    "$$\n",
    "Note that in this case we can **short sell** the assets and we invest all of the capital. \n",
    "We define the Lagrangian:\n",
    "$$\n",
    "\\mathcal{L}(\\mathbf{w}, \\lambda) := \n",
    "\\frac{1}{2} \\mathbf{w}^T\\Sigma\\mathbf{w} \n",
    "- \\lambda\\left( \\mathbf{w}^T \\mathbf{R} + (1-\\mathbf{w}^T\\mathbf{1})R_f - R_0\\right),\n",
    "$$\n",
    "and put the partial derivatives to zero:\n",
    "$$\n",
    "\\begin{cases}\n",
    "\\frac{\\partial\\mathcal{L}}{\\partial \\mathbf{w}} &= \\frac{1}{2} (2\\Sigma \\mathbf{w}) - \\lambda \\mathbf{R} + \\lambda R_f \\mathbf{1}= 0, \\\\\n",
    "\\frac{\\partial\\mathcal{L}}{\\partial \\lambda} &=  - \\mathbf{w}^T \\mathbf{R} - (1-\\mathbf{w}\\mathbf{1})R_f + R_0 = 0, \\\\\n",
    "\\end{cases}\n",
    "$$\n",
    "From the first equation we get:\n",
    "$$\n",
    "\\mathbf{w} = \\lambda \\Sigma^{-1}(\\mathbf{R} - R_f\\mathbf{1}), \n",
    "$$\n",
    "and we can insert it in the second equation:\n",
    "$$\n",
    "\\left( \\lambda\\Sigma^{-1}(\\mathbf{R}-R_f\\mathbf{1}) \\right)^T \\mathbf{R} + \\left( 1 - (\\lambda\\Sigma^{-1}(\\mathbf{R}-R_f\\mathbf{1}))^T\\mathbf{1}   \\right) R_f = R_0\n",
    "\\quad \\Longrightarrow\\quad \n",
    "\\lambda = \\frac{R_0-R_f}{(\\mathbf{R}-R_f\\mathbf{1})^T\\Sigma^{-1}(\\mathbf{R}-R_f\\mathbf{1})}.\n",
    "$$\n",
    "We can now put $\\lambda$ back into the expression for the weigths:\n",
    "$$\n",
    "\\mathbf{w}^* \n",
    "= \\underbrace{ \\frac{R_0-R_f}{(\\mathbf{R}-R_f\\mathbf{1})^T\\Sigma^{-1}(\\mathbf{R}-R_f\\mathbf{1})} }_{:= r} \\Sigma^{-1}(\\mathbf{R} - R_f\\mathbf{1})\n",
    "= r \\Sigma^{-1}(\\mathbf{R} - R_f\\mathbf{1}).\n",
    "$$\n",
    "We found the otpimal weight allocations to the risky assets. The allocation to the risk-free rate would be then given by \n",
    "$1-\\mathbf{w^*}^T\\mathbf{1}$. \n",
    "\n",
    "#### 9.1 Portfolio return and volatility\n",
    "Notice that a portfolio with these weigths should give, by definition, a return equal to the target return $R_0$. \n",
    "In fact:\n",
    "$$\n",
    "\\mu_p = \\mathbf{w^*}^T \\mathbf{R} + (1 - \\mathbf{w^*}^T\\mathbf{1})R_f \n",
    "= r(\\mathbf{R}-R_f\\mathbf{1})^T\\Sigma^{-1}\\mathbf{R} + R_f - r(\\mathbf{R}-R_f\\mathbf{1})^T\\Sigma^{-1} R_f \\mathbf{1} \n",
    "= \\underbrace{ r(\\mathbf{R}-R_f\\mathbf{1})^T\\Sigma^{-1}(\\mathbf{R}-R_f\\mathbf{1}) }_{= R_0 - R_f}   + R_f  = R_0.\n",
    "$$\n",
    "Right. The volatility of the portfolio is given by:\n",
    "$$\n",
    "\\sigma_p^2 = \\mathbf{w^*}^T\\Sigma\\mathbf{w^*} \n",
    "= \\left( r \\Sigma^{-1}(\\mathbf{R} - R_f\\mathbf{1}) \\right)^T \\Sigma \\left( r \\Sigma^{-1}(\\mathbf{R} - R_f\\mathbf{1}) \\right) \n",
    "= r^2 (\\mathbf{R} - R_f\\mathbf{1})^T \\Sigma^{-1}\\underbrace{\\Sigma\\Sigma^{-1}}_{=Id} (\\mathbf{R} - R_f\\mathbf{1}) \n",
    "= \\frac{(R_0-R_f)^2}{ \\left( (\\mathbf{R}-R_f\\mathbf{1})^T\\Sigma^{-1}(\\mathbf{R}-R_f\\mathbf{1}) \\right)^2 } \n",
    "(\\mathbf{R}-R_f\\mathbf{1})^T\\Sigma^{-1}(\\mathbf{R}-R_f\\mathbf{1})\n",
    "$$\n",
    "that is:\n",
    "$$\n",
    "\\sigma_p = \\frac{(R_0-R_f)}{ \\sqrt{ (\\mathbf{R}-R_f\\mathbf{1})^T\\Sigma^{-1}(\\mathbf{R}-R_f\\mathbf{1})} }.\n",
    "$$\n",
    "\n",
    "#### Portoflio weigths when full allocation is done to the risky assets (MSR)\n",
    "\n",
    "If, even in case of risk-free asset, we decide to allocate all the capital to the risky assets we can easily find the weights by normalizing the efficient weights we have found before. In particular, notice that $\\mathbf{w}^*$ is proportional to the vector \n",
    "$\\Sigma^{-1}(\\mathbf{R}-R_f\\mathbf{1})$ with the constant of proportionality equal to $r$. \n",
    "Hence we can define the weigths:\n",
    "$$\n",
    "\\mathbf{w}_M := \\frac{\\Sigma^{-1}(\\mathbf{R}-R_f\\mathbf{1}) }{ \\mathbf{1}^T\\Sigma^{-1}(\\mathbf{R}-R_f\\mathbf{1}) },\n",
    "$$\n",
    "where notice that the denominator is simply the sum of the weigths in $\\Sigma^{-1}(\\mathbf{R}-R_f\\mathbf{1})$, i.e., weights in $w_M$ sum to $1$, and correspond to a full allocation of money in the risky assets and zero to the risk-free rate asset. \n",
    "\n",
    "Note that the return of such portfolio is given by:\n",
    "$$\n",
    "\\mu_M = \\mathbf{w}_M^T\\mathbf{R} = \\frac{ (\\mathbf{R}-R_f\\mathbf{1})^T\\Sigma^{-1}\\mathbf{R} }{ \\mathbf{1}^T\\Sigma^{-1}(\\mathbf{R}-R_f\\mathbf{1})}, \n",
    "$$\n",
    "while the volatility is:\n",
    "$$\n",
    "\\sigma_M^2 = \\mathbf{w}_M^T \\Sigma \\mathbf{w}_M \n",
    "= \\frac{1}{ \\left( \\mathbf{1}^T\\Sigma^{-1}(\\mathbf{R}-R_f\\mathbf{1})  \\right)^2 } \n",
    "(\\mathbf{R}-R_f\\mathbf{1})^T\\underbrace{\\Sigma^{-1}\\Sigma}_{=Id}\\Sigma^{-1} (\\mathbf{R}-R_f\\mathbf{1}) \n",
    "= \\frac{(\\mathbf{R}-R_f\\mathbf{1})^T \\Sigma^{-1} (\\mathbf{R}-R_f\\mathbf{1})}{ \\left( \\mathbf{1}^T\\Sigma^{-1}(\\mathbf{R}-R_f\\mathbf{1}) \\right)^2 }\n",
    "\\quad \\Longrightarrow\\quad \n",
    "\\sigma_M = \n",
    "\\frac{ \\sqrt{(\\mathbf{R}-R_f\\mathbf{1})^T \\Sigma^{-1} (\\mathbf{R}-R_f\\mathbf{1})}  }{ \\mathbf{1}^T\\Sigma^{-1}(\\mathbf{R}-R_f\\mathbf{1})  }.\n",
    "$$\n",
    "\n",
    "The portoflio of only risky assets with weights given by $\\mathbf{w}_M$ is, by constuction, a portfolio with a minimum volatility lying on the efficient frontier. However, we can see that **it is also the portfolio with the highest Sharpe Ratio**. \n",
    "\n",
    "Consider the point on the $(\\sigma, \\mu)$ plane corresponding to the portfolio where we only allocate money to the risk-free asset, \n",
    "i.e. the portfolio with $(\\sigma,\\mu)=(0,R_f)$, and the portfolio where we only allocate money to the risky asset,\n",
    "i.e. the portfolio with $(\\sigma,\\mu)=(\\sigma_M,\\mu_M)$, where $\\sigma_M$ and $\\mu_M$ have been found above. \n",
    "The line connecting these two portfolio is:\n",
    "$$\n",
    "\\mu - \\mu_M = \\frac{\\mu_M - R_f}{\\sigma_M - 0} (\\sigma - \\sigma_M) \n",
    "\\quad\\text{and then}\\quad\n",
    "\\mu = R_f + \\frac{\\mu_M - R_f}{\\sigma_M} \\sigma,\n",
    "$$\n",
    "i.e., **this is the Capital Market Line**, and we see that **the slope of the CML is the Sharpe Ratio of the portfolio with return $\\mu_M$ and $\\sigma_M$**, that is, the minimum volatility portfolio on the efficient frontier with weights given by $\\mathbf{w}_M$. Furthermore, from the line we see that such portfolio is also the \n",
    "maximum Sharpe Ratio portfolio since:\n",
    "$$\n",
    "\\max \\frac{\\mu - R_f}{\\sigma} = \\frac{\\mu_M - R_f}{\\sigma_M}.\n",
    "$$\n",
    "\n",
    "Since the CML connects the portfolios composed of only the risk-free asset and only the risky assets, every point on the line corresponds to an investmentes in both the risk-free rate and the risky assets. In this case, the weights are given by the $\\mathbf{w}^*$ previously found. "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5cef808a",
   "metadata": {
    "papermill": {
     "duration": 0.040811,
     "end_time": "2024-05-31T20:07:21.430041",
     "exception": false,
     "start_time": "2024-05-31T20:07:21.389230",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "First of all, recall that with our method we can find the weigths of the portfolio with the maximum sharpe ratio:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "d6bd5fa1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T20:07:21.513298Z",
     "iopub.status.busy": "2024-05-31T20:07:21.512888Z",
     "iopub.status.idle": "2024-05-31T20:07:21.560323Z",
     "shell.execute_reply": "2024-05-31T20:07:21.559263Z"
    },
    "papermill": {
     "duration": 0.09143,
     "end_time": "2024-05-31T20:07:21.562837",
     "exception": false,
     "start_time": "2024-05-31T20:07:21.471407",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0.55584528, 0.        , 0.44415472])"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "risk_free_rate = 0.06\n",
    "optimal_weights = erk.maximize_shape_ratio(ann_rets, cov_rets, risk_free_rate, periods_per_year)\n",
    "optimal_weights"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dec98481",
   "metadata": {
    "papermill": {
     "duration": 0.041317,
     "end_time": "2024-05-31T20:07:21.645091",
     "exception": false,
     "start_time": "2024-05-31T20:07:21.603774",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Ok. Let us verify our formulas for $\\mathbf{w}_M$:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "a8830557",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T20:07:21.728536Z",
     "iopub.status.busy": "2024-05-31T20:07:21.728114Z",
     "iopub.status.idle": "2024-05-31T20:07:21.770857Z",
     "shell.execute_reply": "2024-05-31T20:07:21.769159Z"
    },
    "papermill": {
     "duration": 0.088897,
     "end_time": "2024-05-31T20:07:21.774815",
     "exception": false,
     "start_time": "2024-05-31T20:07:21.685918",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "invcov = erk.inverse_df(cov_rets)\n",
    "ones   = np.repeat(1,3) \n",
    "r_rf   = ann_rets - risk_free_rate*ones"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "6233032d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T20:07:21.917256Z",
     "iopub.status.busy": "2024-05-31T20:07:21.916795Z",
     "iopub.status.idle": "2024-05-31T20:07:21.959413Z",
     "shell.execute_reply": "2024-05-31T20:07:21.958399Z"
    },
    "papermill": {
     "duration": 0.100115,
     "end_time": "2024-05-31T20:07:21.961942",
     "exception": false,
     "start_time": "2024-05-31T20:07:21.861827",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([ 0.7700674, -0.4576817,  0.6876143])"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "w_M = np.dot( invcov, r_rf ) / np.dot( ones, np.dot(invcov, r_rf) )\n",
    "w_M"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7295d921",
   "metadata": {
    "papermill": {
     "duration": 0.040198,
     "end_time": "2024-05-31T20:07:22.043643",
     "exception": false,
     "start_time": "2024-05-31T20:07:22.003445",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Yes, they coincide. We implemented these weights in the following method:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "c53eb367",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T20:07:22.127611Z",
     "iopub.status.busy": "2024-05-31T20:07:22.127173Z",
     "iopub.status.idle": "2024-05-31T20:07:22.170136Z",
     "shell.execute_reply": "2024-05-31T20:07:22.168896Z"
    },
    "papermill": {
     "duration": 0.088887,
     "end_time": "2024-05-31T20:07:22.173526",
     "exception": false,
     "start_time": "2024-05-31T20:07:22.084639",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([ 0.7700674, -0.4576817,  0.6876143])"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "erk.weigths_max_sharpe_ratio(cov_rets, r_rf).values"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4c2eea55",
   "metadata": {
    "papermill": {
     "duration": 0.048318,
     "end_time": "2024-05-31T20:07:22.263346",
     "exception": false,
     "start_time": "2024-05-31T20:07:22.215028",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Now, let us verify that the portfolio with these weigths has a return and a volatility as in formulas $\\mu_M$ and $\\sigma_M$:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "bd34aed8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T20:07:22.349230Z",
     "iopub.status.busy": "2024-05-31T20:07:22.348795Z",
     "iopub.status.idle": "2024-05-31T20:07:22.390541Z",
     "shell.execute_reply": "2024-05-31T20:07:22.389412Z"
    },
    "papermill": {
     "duration": 0.087163,
     "end_time": "2024-05-31T20:07:22.393193",
     "exception": false,
     "start_time": "2024-05-31T20:07:22.306030",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.33602380284856925"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# return: using the portfolio return method\n",
    "mu_M = erk.portfolio_return(w_M, ann_rets)\n",
    "mu_M"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "35a68540",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T20:07:22.477588Z",
     "iopub.status.busy": "2024-05-31T20:07:22.477169Z",
     "iopub.status.idle": "2024-05-31T20:07:22.519855Z",
     "shell.execute_reply": "2024-05-31T20:07:22.518716Z"
    },
    "papermill": {
     "duration": 0.087399,
     "end_time": "2024-05-31T20:07:22.522509",
     "exception": false,
     "start_time": "2024-05-31T20:07:22.435110",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.3360238028485693"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# return: using the formula we found\n",
    "mu_M = np.dot( r_rf, np.dot(invcov, ann_rets) ) / np.dot(ones, np.dot(invcov,r_rf) )\n",
    "mu_M "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "4bd47862",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T20:07:22.605117Z",
     "iopub.status.busy": "2024-05-31T20:07:22.604720Z",
     "iopub.status.idle": "2024-05-31T20:07:22.646937Z",
     "shell.execute_reply": "2024-05-31T20:07:22.645765Z"
    },
    "papermill": {
     "duration": 0.086424,
     "end_time": "2024-05-31T20:07:22.649469",
     "exception": false,
     "start_time": "2024-05-31T20:07:22.563045",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.33081687958357814"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# volatility: using the portfolio vol method\n",
    "sigma_M = erk.annualize_vol( erk.portfolio_volatility(w_M, cov_rets), periods_per_year)\n",
    "sigma_M"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "c49577cb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T20:07:22.733798Z",
     "iopub.status.busy": "2024-05-31T20:07:22.732962Z",
     "iopub.status.idle": "2024-05-31T20:07:22.775338Z",
     "shell.execute_reply": "2024-05-31T20:07:22.774281Z"
    },
    "papermill": {
     "duration": 0.087075,
     "end_time": "2024-05-31T20:07:22.777898",
     "exception": false,
     "start_time": "2024-05-31T20:07:22.690823",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.3308168795835782"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# volatility: using the formula\n",
    "sigma_M = np.sqrt( np.dot(r_rf, np.dot(invcov,r_rf)) ) / np.dot(ones, np.dot(invcov,r_rf))\n",
    "sigma_M = erk.annualize_vol(sigma_M , periods_per_year)\n",
    "sigma_M"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a5e9ee05",
   "metadata": {
    "papermill": {
     "duration": 0.041435,
     "end_time": "2024-05-31T20:07:22.860901",
     "exception": false,
     "start_time": "2024-05-31T20:07:22.819466",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Perfect. Let us now define the $\\mathbf{w}^*$ weigths of a portfolio which invest in both the risk-free asset and risky assets:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "f495a782",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T20:07:22.945746Z",
     "iopub.status.busy": "2024-05-31T20:07:22.944706Z",
     "iopub.status.idle": "2024-05-31T20:07:22.986853Z",
     "shell.execute_reply": "2024-05-31T20:07:22.985808Z"
    },
    "papermill": {
     "duration": 0.087037,
     "end_time": "2024-05-31T20:07:22.989247",
     "exception": false,
     "start_time": "2024-05-31T20:07:22.902210",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([ 0.19529011, -0.11606868,  0.17437989])"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "target_ret = 0.13\n",
    "wstar = (target_ret - risk_free_rate) / np.dot(r_rf, np.dot(invcov,r_rf)) * np.dot(invcov,r_rf)             \n",
    "wstar"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8ca3fbed",
   "metadata": {
    "papermill": {
     "duration": 0.040512,
     "end_time": "2024-05-31T20:07:23.072653",
     "exception": false,
     "start_time": "2024-05-31T20:07:23.032141",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "To these weigths we have to add the weigth in the risk-free asset:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "5cf84c7a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T20:07:23.156833Z",
     "iopub.status.busy": "2024-05-31T20:07:23.155794Z",
     "iopub.status.idle": "2024-05-31T20:07:23.198020Z",
     "shell.execute_reply": "2024-05-31T20:07:23.196782Z"
    },
    "papermill": {
     "duration": 0.086698,
     "end_time": "2024-05-31T20:07:23.200375",
     "exception": false,
     "start_time": "2024-05-31T20:07:23.113677",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([ 0.19529011, -0.11606868,  0.17437989,  0.74639868])"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "weights = np.concatenate([wstar, [1 - wstar.sum()]])\n",
    "weights"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "858b443f",
   "metadata": {
    "papermill": {
     "duration": 0.040404,
     "end_time": "2024-05-31T20:07:23.281944",
     "exception": false,
     "start_time": "2024-05-31T20:07:23.241540",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "The last weight is the one in the risk-free asset. \n",
    "The return of such a portfolio is, by definition, equal to the target return:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "276525e7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T20:07:23.365669Z",
     "iopub.status.busy": "2024-05-31T20:07:23.365270Z",
     "iopub.status.idle": "2024-05-31T20:07:23.407301Z",
     "shell.execute_reply": "2024-05-31T20:07:23.406215Z"
    },
    "papermill": {
     "duration": 0.086916,
     "end_time": "2024-05-31T20:07:23.409685",
     "exception": false,
     "start_time": "2024-05-31T20:07:23.322769",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.13"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ann_rets_with_rf = pd.concat([ann_rets, pd.Series([risk_free_rate])], ignore_index=True)\n",
    "\n",
    "# Calculate the portfolio return\n",
    "mu_p = erk.portfolio_return(weights, ann_rets_with_rf)\n",
    "mu_p"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "20e2a55a",
   "metadata": {
    "papermill": {
     "duration": 0.041313,
     "end_time": "2024-05-31T20:07:23.493690",
     "exception": false,
     "start_time": "2024-05-31T20:07:23.452377",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Let us see the volatility of such a portfolio:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "56ee2830",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T20:07:23.577720Z",
     "iopub.status.busy": "2024-05-31T20:07:23.576771Z",
     "iopub.status.idle": "2024-05-31T20:07:23.618412Z",
     "shell.execute_reply": "2024-05-31T20:07:23.617123Z"
    },
    "papermill": {
     "duration": 0.085899,
     "end_time": "2024-05-31T20:07:23.620769",
     "exception": false,
     "start_time": "2024-05-31T20:07:23.534870",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.08389559643722046"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# using the portfolio_volatility method\n",
    "erk.annualize_vol( erk.portfolio_volatility(wstar, cov_rets), periods_per_year)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "ea36ac4b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T20:07:23.703547Z",
     "iopub.status.busy": "2024-05-31T20:07:23.703166Z",
     "iopub.status.idle": "2024-05-31T20:07:23.744816Z",
     "shell.execute_reply": "2024-05-31T20:07:23.743806Z"
    },
    "papermill": {
     "duration": 0.086212,
     "end_time": "2024-05-31T20:07:23.747360",
     "exception": false,
     "start_time": "2024-05-31T20:07:23.661148",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.08389559643722047"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# using the formula\n",
    "sigma_p = erk.annualize_vol( (target_ret - risk_free_rate) / np.sqrt(np.dot(r_rf, np.dot(invcov,r_rf))), periods_per_year )\n",
    "sigma_p"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "20f724dd",
   "metadata": {
    "papermill": {
     "duration": 0.041854,
     "end_time": "2024-05-31T20:07:23.831550",
     "exception": false,
     "start_time": "2024-05-31T20:07:23.789696",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Finally, let us verify that all portfolio that are constructed using the weigths $\\mathbf{w}^*$ and $1-\\mathbf{w}^T\\mathbf{1}$ lie on the Capital Market Line. We define a set of target returns, from the original target return of $0.06$ up to the maximum sharpe ratio return $\\mu_M$:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "c2dd30b7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T20:07:23.917399Z",
     "iopub.status.busy": "2024-05-31T20:07:23.916565Z",
     "iopub.status.idle": "2024-05-31T20:07:23.967254Z",
     "shell.execute_reply": "2024-05-31T20:07:23.966112Z"
    },
    "papermill": {
     "duration": 0.096176,
     "end_time": "2024-05-31T20:07:23.969670",
     "exception": false,
     "start_time": "2024-05-31T20:07:23.873494",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[array([ 0.19529011, -0.11606868,  0.17437989,  0.74639868]),\n",
       " array([ 0.22554154, -0.13404832,  0.20139223,  0.70711454]),\n",
       " array([ 0.25579298, -0.15202795,  0.22840457,  0.6678304 ]),\n",
       " array([ 0.28604442, -0.17000758,  0.2554169 ,  0.62854626]),\n",
       " array([ 0.31629585, -0.18798721,  0.28242924,  0.58926212]),\n",
       " array([ 0.34654729, -0.20596685,  0.30944158,  0.54997798]),\n",
       " array([ 0.37679873, -0.22394648,  0.33645392,  0.51069384]),\n",
       " array([ 0.40705016, -0.24192611,  0.36346625,  0.47140969]),\n",
       " array([ 0.4373016 , -0.25990574,  0.39047859,  0.43212555]),\n",
       " array([ 0.46755304, -0.27788538,  0.41749093,  0.39284141]),\n",
       " array([ 0.49780447, -0.29586501,  0.44450326,  0.35355727]),\n",
       " array([ 0.52805591, -0.31384464,  0.4715156 ,  0.31427313]),\n",
       " array([ 0.55830735, -0.33182427,  0.49852794,  0.27498899]),\n",
       " array([ 0.58855878, -0.34980391,  0.52554028,  0.23570485]),\n",
       " array([ 0.61881022, -0.36778354,  0.55255261,  0.19642071]),\n",
       " array([ 0.64906166, -0.38576317,  0.57956495,  0.15713656]),\n",
       " array([ 0.67931309, -0.4037428 ,  0.60657729,  0.11785242]),\n",
       " array([ 0.70956453, -0.42172244,  0.63358962,  0.07856828]),\n",
       " array([ 0.73981597, -0.43970207,  0.66060196,  0.03928414]),\n",
       " array([ 7.70067403e-01, -4.57681702e-01,  6.87614299e-01,  1.11022302e-16])]"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "target_ret_vec = np.linspace(target_ret,mu_M,20)\n",
    "wstar = [ (tr - risk_free_rate) / np.dot(r_rf, np.dot(invcov,r_rf)) * np.dot(invcov,r_rf) for tr in target_ret_vec ]         \n",
    "wstar = [ np.append(wstar[i], 1-wstar[i].sum()) for i in range(len(wstar)) ]\n",
    "wstar "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "bc865651",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T20:07:24.055092Z",
     "iopub.status.busy": "2024-05-31T20:07:24.054703Z",
     "iopub.status.idle": "2024-05-31T20:07:24.105931Z",
     "shell.execute_reply": "2024-05-31T20:07:24.104742Z"
    },
    "papermill": {
     "duration": 0.096662,
     "end_time": "2024-05-31T20:07:24.108586",
     "exception": false,
     "start_time": "2024-05-31T20:07:24.011924",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "([0.13,\n",
       "  0.14084335804466155,\n",
       "  0.1516867160893231,\n",
       "  0.16253007413398463,\n",
       "  0.1733734321786462,\n",
       "  0.18421679022330775,\n",
       "  0.19506014826796927,\n",
       "  0.20590350631263082,\n",
       "  0.21674686435729235,\n",
       "  0.22759022240195392,\n",
       "  0.23843358044661545,\n",
       "  0.24927693849127697,\n",
       "  0.26012029653593854,\n",
       "  0.27096365458060007,\n",
       "  0.2818070126252616,\n",
       "  0.29265037066992317,\n",
       "  0.30349372871458474,\n",
       "  0.31433708675924626,\n",
       "  0.3251804448039078,\n",
       "  0.33602380284856925],\n",
       " [0.08389559643722047,\n",
       "  0.0968914534449235,\n",
       "  0.10988731045262655,\n",
       "  0.12288316746032957,\n",
       "  0.1358790244680326,\n",
       "  0.14887488147573566,\n",
       "  0.16187073848343866,\n",
       "  0.17486659549114172,\n",
       "  0.18786245249884476,\n",
       "  0.20085830950654782,\n",
       "  0.21385416651425088,\n",
       "  0.22685002352195388,\n",
       "  0.2398458805296569,\n",
       "  0.25284173753735995,\n",
       "  0.265837594545063,\n",
       "  0.27883345155276607,\n",
       "  0.2918293085604691,\n",
       "  0.3048251655681721,\n",
       "  0.31782102257587513,\n",
       "  0.3308168795835782])"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ann_rets_with_rf = pd.concat([ann_rets, pd.Series([risk_free_rate])], ignore_index=True)\n",
    "\n",
    "# Calculate portfolio returns using the concatenated returns\n",
    "mus = [erk.portfolio_return(wstar[i], ann_rets_with_rf) for i in range(len(wstar))]\n",
    "\n",
    "# Calculate annualized volatilities\n",
    "sigmas = [\n",
    "    erk.annualize_vol((tr - risk_free_rate) / np.sqrt(np.dot(r_rf, np.dot(invcov, r_rf))), periods_per_year) \n",
    "    for tr in target_ret_vec\n",
    "]\n",
    "\n",
    "mus, sigmas"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "f56a3667",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T20:07:24.195537Z",
     "iopub.status.busy": "2024-05-31T20:07:24.195141Z",
     "iopub.status.idle": "2024-05-31T20:07:24.586256Z",
     "shell.execute_reply": "2024-05-31T20:07:24.584960Z"
    },
    "papermill": {
     "duration": 0.43756,
     "end_time": "2024-05-31T20:07:24.589207",
     "exception": false,
     "start_time": "2024-05-31T20:07:24.151647",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "CML = pd.concat([pd.DataFrame(sigmas),pd.DataFrame(mus)], axis=1) \n",
    "CML.columns = [\"sigma\",\"mu\"]\n",
    "CML.plot.line(x=\"sigma\", y=\"mu\", grid=True, legend=False)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5f9c74af",
   "metadata": {
    "papermill": {
     "duration": 0.047959,
     "end_time": "2024-05-31T20:07:24.681371",
     "exception": false,
     "start_time": "2024-05-31T20:07:24.633412",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Conclusion\n",
    "Modern Portfolio Theory (MPT) has established itself as a cornerstone of investment strategy. By emphasizing diversification and the relationship between risk and return across a portfolio, MPT equips investors with a framework for building portfolios optimized for their risk tolerance and return goals.\n",
    "\n",
    "While MPT's core concepts, like diversification, remain widely applicable, it's important to acknowledge the limitations of its assumptions. Real-world markets present complexities not fully captured by MPT's historical data reliance.\n",
    "\n",
    "Despite these limitations, MPT's core principles continue to serve as a valuable foundation for investors of all levels. By understanding the power of diversification and the relationship between risk and return, investors can make informed decisions to navigate the investment landscape and pursue their financial goals."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "102be3b9",
   "metadata": {
    "papermill": {
     "duration": 0.043578,
     "end_time": "2024-05-31T20:07:24.768721",
     "exception": false,
     "start_time": "2024-05-31T20:07:24.725143",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "<HTML>\n",
    "<BODY><center>\n",
    "  <IMG SRC=\"https://media3.giphy.com/media/BPJmthQ3YRwD6QqcVD/giphy.gif?cid=ecf05e47rsmou6giss4s3n1u8oajna2nbe22nd82wtlbr36r&ep=v1_gifs_search&rid=giphy.gif&ct=g\">\n",
    "      </center>\n",
    "    <h2 style=\"color: #00FFFF;\"><center>IF YOU ENJOY PLEASE UPVOTE AND GIVE ME A FEEDBACK  🥰.</center></h2>\n",
    "\n",
    "</BODY>\n",
    "</HTML>"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 5000375,
     "sourceId": 8527557,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30698,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 73.00724,
   "end_time": "2024-05-31T20:07:25.544624",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-05-31T20:06:12.537384",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
